<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Deschen Blog</title>
  
  <subtitle>以Java开发为主的个人博客，记录自己在学习、工作和成长的笔记和心得</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.deschen.cn/"/>
  <updated>2023-11-14T00:04:58.979Z</updated>
  <id>https://www.deschen.cn/</id>
  
  <author>
    <name>Deschen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>redis</title>
    <link href="https://www.deschen.cn/2023/11/14/redis/"/>
    <id>https://www.deschen.cn/2023/11/14/redis/</id>
    <published>2023-11-14T00:03:53.651Z</published>
    <updated>2023-11-14T00:04:58.979Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h2><h3 id="什么是redis"><a href="#什么是redis" class="headerlink" title="什么是redis"></a>什么是redis</h3><p>Redis 是一种基于内存的数据库，<strong>读写速度非常快</strong>，用于缓存和分布式场景</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Redis&quot;&gt;&lt;a href=&quot;#Redis&quot; class=&quot;headerlink&quot; title=&quot;Redis&quot;&gt;&lt;/a&gt;Redis&lt;/h2&gt;&lt;h3 id=&quot;什么是redis&quot;&gt;&lt;a href=&quot;#什么是redis&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Yapi的部署和使用</title>
    <link href="https://www.deschen.cn/2023/08/08/Yapi%E7%9A%84%E9%83%A8%E7%BD%B2%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
    <id>https://www.deschen.cn/2023/08/08/Yapi%E7%9A%84%E9%83%A8%E7%BD%B2%E5%92%8C%E4%BD%BF%E7%94%A8/</id>
    <published>2023-08-08T06:42:34.840Z</published>
    <updated>2021-05-12T05:44:40.805Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Yapi-的部署和使用"><a href="#Yapi-的部署和使用" class="headerlink" title="Yapi 的部署和使用"></a>Yapi 的部署和使用</h1><h2 id="一、基于-docker-compose-部署-Yapi"><a href="#一、基于-docker-compose-部署-Yapi" class="headerlink" title="一、基于 docker-compose 部署 Yapi"></a>一、基于 docker-compose 部署 Yapi</h2><blockquote><p>如何部署 docker-compose，点击我博客的<a href="https://deschen.gitee.io/2021/03/23/docker-compose%20+%20jenkins%E6%90%AD%E5%BB%BA%E9%83%A8%E7%BD%B2/" target="_blank" rel="noopener">链接</a></p></blockquote><ul><li>部署 Yapi 的 docker-compose.yml。PS：因为 Yapi 的数据库就是MongoDB，所以部署 Yapi 要同时部署 MongoDB</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'2.1'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">yapi:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mrjin/yapi:latest</span></span><br><span class="line">    <span class="comment"># build: ./</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">yapi</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">VERSION=1.5.6</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">LOG_PATH=/tmp/yapi.log</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">HOME=/home</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PORT=3000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ADMIN_EMAIL=me@jinfeijie.cn</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DB_SERVER=mongo</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DB_NAME=yapi</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DB_PORT=27017</span></span><br><span class="line">    <span class="comment"># restart: always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">13000</span><span class="string">:3000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">9090</span><span class="string">:9090</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./log/yapi.log:/home/vendors/log</span> <span class="comment"># log dir</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mongo</span></span><br><span class="line">    <span class="attr">entrypoint:</span> <span class="string">"bash /wait-for-it.sh mongo:27017 -- entrypoint.sh"</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">yapi</span></span><br><span class="line">  <span class="attr">mongo:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mongo</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">mongo</span></span><br><span class="line">    <span class="comment"># restart: always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">27017</span><span class="string">:27017</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">../mongodb/db:/data/db</span> <span class="comment">#db dir</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">yapi</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">yapi:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br></pre></td></tr></table></figure><h2 id="二、IDEA-关于-Yapi-的使用"><a href="#二、IDEA-关于-Yapi-的使用" class="headerlink" title="二、IDEA 关于 Yapi 的使用"></a>二、IDEA 关于 Yapi 的使用</h2><ul><li><p>先下载 YapiUpload 插件，用于把接口上传到 Yapi 应用上</p></li><li><p>在 .idea 文件夹下的 misc.xml 插入 关于 Yapi 的配置,</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- yapi配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">component</span> <span class="attr">name</span>=<span class="string">"yapi"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">"projectToken"</span>&gt;</span>22bffb576415df1b8d088176dd9090cd2d5a29141a23d059f68f8988d1823d20<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">"projectId"</span>&gt;</span>11<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">"yapiUrl"</span>&gt;</span>http://192.168.163.138:3000<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">"projectType"</span>&gt;</span>api<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">component</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Yapi-的部署和使用&quot;&gt;&lt;a href=&quot;#Yapi-的部署和使用&quot; class=&quot;headerlink&quot; title=&quot;Yapi 的部署和使用&quot;&gt;&lt;/a&gt;Yapi 的部署和使用&lt;/h1&gt;&lt;h2 id=&quot;一、基于-docker-compose-部署-Yapi&quot;&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Nginx工作原理详解</title>
    <link href="https://www.deschen.cn/2023/08/08/Nginx%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%E8%AF%A6%E8%A7%A3/"/>
    <id>https://www.deschen.cn/2023/08/08/Nginx%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%E8%AF%A6%E8%A7%A3/</id>
    <published>2023-08-08T06:42:34.817Z</published>
    <updated>2021-03-09T13:16:20.462Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Nginx工作原理讲解"><a href="#Nginx工作原理讲解" class="headerlink" title="Nginx工作原理讲解"></a>Nginx工作原理讲解</h1><p>[toc]</p><h2 id="一、Nginx工作过程"><a href="#一、Nginx工作过程" class="headerlink" title="一、Nginx工作过程"></a>一、Nginx工作过程</h2><p><img src="https://deschen-storage.oss-cn-guangzhou.aliyuncs.com/image-20210309210052409.png" alt="image-20210309210052409"></p><ol><li>在nginx启动后，会有一个master进程和多个worker进程，master进程主要用来管理worker进程，包括：接受信号，将信号分发给worker进程，监听worker进程工作状态，当worker进程退出时(非正常)，启动新的worker进程。基本的网络事件会交给worker进程处理。多个worker进程之间是对等的，他们同等竞争来自客户端的请求，各进程互相之间是独立的 。一个请求，只可能在一个worker进程中处理，一个worker进程，不可能处理其它进程的请求。 worker进程的个数是可以设置的，一般我们会设置与机器cpu核数一致，这里面的原因与nginx的进程模型以及事件处理模型是分不开的 。</li><li>当master接收到重新加载的信号会怎么处理(./nginx -s reload)?，master会重新加载配置文件，然后启动新的进程，使用的新的worker进程来接受请求，并告诉老的worker进程他们可以退休了，老的worker进程将不会接受新的，老的worker进程处理完手中正在处理的请求就会退出。</li><li>worker进程是如何处理用户的请求呢？首先master会根据配置文件生成一个监听相应端口的socket，然后创建多个worker进程，这样每个worker就可以接受从socket过来的消息。当一个连接过来的时候，每一个worker都能接收到通知，但是只有一个worker能和这个连接建立关系，其他的worker都会连接失败，这就是所谓的惊群现象。为了解决这个问题，nginx提供一个共享锁accept_mutex，有了这个共享锁后，就会只有一个worker去接收这个连接。当一个worker进程在accept这个连接之后，就开始读取请求，解析请求，处理请求，产生数据后，再返回给客户端，最后才断开连接，这样一个完整的请求就是这样的了。</li></ol><h2 id="二、nginx的事件驱动机制"><a href="#二、nginx的事件驱动机制" class="headerlink" title="二、nginx的事件驱动机制"></a>二、nginx的事件驱动机制</h2><ul><li>为什么几个worker进程能同时接收上万的请求呢？这是因为nginx事件处理机制是异步非阻塞的。nginx将一个请求划分为多个阶段来异步处理模块，每个阶段只是处理请求的一部分，如果请求的这一部分发生阻塞，nginx不会等待，它会处理其他的请求的某一部分。</li><li>与传统web服务不同之处<ul><li>传统web服务器的每个事件消费者独占一个进程(线程)资源,这种情况对于用户规模较小的情况来说,用户响应速度快,但是当并发规模达到数十万上百万的时候,由于线程(进程)数目过多,会频繁的切换,而且当线程阻塞的时候会进行睡眠,也会造成资源的浪费,这样服务器就会产生瓶颈.</li><li>nginx服务器采用的事件驱动机制不同,他不会为每个消费事件创建一个进程或线程,这样就不会产生由于进程间频繁切换占用cpu而产生的瓶颈,而且nginx不会让事件阻塞,即采用无阻塞事件驱动模型,这样就不会因为事件阻塞使进程睡眠而造成的资源浪费.</li></ul></li></ul><h2 id="三、epoll库"><a href="#三、epoll库" class="headerlink" title="三、epoll库"></a>三、epoll库</h2><ul><li>epoll库是Nginx服务器支持的高性能事件驱动库之一。它是公认的最好的事件驱动模型。和poll库及select库有很大的区别。</li><li>poll和select都是创建一个待处理事件列表，然后把这个列表发给内核，返回的时候，再去轮询检查这个列表。以判断这个事件是否发生。在描述符太多的情况下，就会明显效率低下了。</li><li>epoll是这么做的，它把事件描述符列表的管理交给内核复制。一旦有某个事件发生，内核将发生事件的事件描述符交给Nginx的进程，而不是将整个事件描述符列表交给进程，让进程去轮询具体是哪个描述符。epoll()避免了轮询整个事件描述符列表。所以显得更高效。</li><li>epoll库的基本步骤：<ul><li>epoll库通过相关调用通知内核创建一个有N个描述符的事件列表，然后给这个事件列表设置自己关心的事件。并把它添加到内核中。在具体的代码中还可以实现对相关调用的事件描述符列表进行修改和删除。</li><li>一旦设置完成就一直等待内核通知事件发生了，某一事件发生后，内核就将发生事件的描述符给epoll库，epoll库去处理事件。</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Nginx工作原理讲解&quot;&gt;&lt;a href=&quot;#Nginx工作原理讲解&quot; class=&quot;headerlink&quot; title=&quot;Nginx工作原理讲解&quot;&gt;&lt;/a&gt;Nginx工作原理讲解&lt;/h1&gt;&lt;p&gt;[toc]&lt;/p&gt;
&lt;h2 id=&quot;一、Nginx工作过程&quot;&gt;&lt;a 
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Java反射</title>
    <link href="https://www.deschen.cn/2023/08/08/Java%E5%8F%8D%E5%B0%84/"/>
    <id>https://www.deschen.cn/2023/08/08/Java%E5%8F%8D%E5%B0%84/</id>
    <published>2023-08-08T06:42:34.793Z</published>
    <updated>2021-03-14T05:22:23.637Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java反射"><a href="#Java反射" class="headerlink" title="Java反射"></a>Java反射</h1><p>[toc]</p><h2 id="一、什么是反射？"><a href="#一、什么是反射？" class="headerlink" title="一、什么是反射？"></a>一、什么是反射？</h2><ul><li><p>反射实在程序时动态加载类并获取类的详细信息，从而操作类或对象属性和方法。</p></li><li><p>本质在JVM中获取class对象，在对class对象反编译，从而获取对象的各种信息</p></li><li><p>类加载与反射原理图</p><p><img src="https://deschen-storage.oss-cn-guangzhou.aliyuncs.com/image-20210313232232665.png" alt="image-20210313232232665"></p></li></ul><h2 id="二、反射的优缺点"><a href="#二、反射的优缺点" class="headerlink" title="二、反射的优缺点"></a>二、反射的优缺点</h2><ul><li>优点<ul><li>增加程序的灵活性，避免程序写死在代码里<ul><li>因为Java是先编译后运行的语言，要想实例一个类，那么必须修改源代码重新编译。而反射不需要通过编译获取，比如反射可以通过配置文件里面的类信息实例化某类</li></ul></li></ul></li><li>缺点<ul><li>影响程序性能：反射包括一些动态类型，所以JVM无法对代码进行修改，因此效率比非反射要低得多。在性能方面要求高的代码最好不要使用反射</li><li>内部暴露：反射可以执行一些正常情况下不允许的操作（比如访问私有方法和属性），所以反射会导致出乎意料的事件发生——代码有功能上错误，破坏抽象性</li></ul></li></ul><h3 id="三、反射的用途"><a href="#三、反射的用途" class="headerlink" title="三、反射的用途"></a>三、反射的用途</h3><ul><li>框架的开发，比如Spring框架的配置化，读取XML文件配置的Bean进行加载。</li></ul><h2 id="四、反射常用的类"><a href="#四、反射常用的类" class="headerlink" title="四、反射常用的类"></a>四、反射常用的类</h2><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Java.lang.Class;</span><br><span class="line"></span><br><span class="line">Java.lang.reflect<span class="function">.<span class="keyword">Constructor</span>;</span></span><br><span class="line"></span><br><span class="line">Java.lang.reflect.Field;</span><br><span class="line"></span><br><span class="line">Java.lang.reflect<span class="function">.<span class="keyword">Method</span>;</span></span><br><span class="line"></span><br><span class="line">Java.lang.reflect.Modifier;</span><br></pre></td></tr></table></figure><h2 id="五、反射的基本使用"><a href="#五、反射的基本使用" class="headerlink" title="五、反射的基本使用"></a>五、反射的基本使用</h2><ul><li><p>获取Class</p><ul><li><p>调用对象的getClass方法</p></li><li><p>调用类的静态属性 class属性</p></li><li><p>调用Class的静态方法forName(“类全限定名“)(最常用)</p></li><li><p>三种比较判断</p><ul><li>三种方式中，常用第三种，第一种对象都有了还要反射干什么，第二种需要导入类包，依赖太强，不导包就抛编译错误。一般都使用第三种，一个字符串可以传入也可以写在配置文件中等多种方法。    </li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReflectCase</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取类的三种方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getClassTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 1、调用对象的getClass方法</span></span><br><span class="line">        Person person = <span class="keyword">new</span> Person(<span class="string">"张三"</span>, <span class="number">12</span>);</span><br><span class="line">        Class&lt;? extends Person&gt; personClass1 = person.getClass();</span><br><span class="line">        System.out.println(personClass1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、调用类的静态属性 class属性</span></span><br><span class="line">        Class&lt;Person&gt; personClass2 = Person<span class="class">.<span class="keyword">class</span></span>;</span><br><span class="line">        System.out.println(personClass2);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、调用Class的静态方法forName("类全限定名“)</span></span><br><span class="line">        Class&lt;?&gt; personClass3 = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            personClass3 = Class.forName(<span class="string">"cn.deschen.features.jdk8.cn.deschen.reflect.Person"</span>);</span><br><span class="line">            System.out.println(personClass3);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在运行期间，一个类，只有一个Class对象产生，所以打印结果都是true；</span></span><br><span class="line">        System.out.println(personClass1 == personClass2);</span><br><span class="line">        System.out.println(personClass2 == personClass3);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name, Integer age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(Integer age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Person&#123;"</span> +</span><br><span class="line">                <span class="string">"name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", age="</span> + age +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>判断是否为某个类的示例</p><ul><li>一般的，我们使用instanceof 关键字来判断是否为某个类的实例。同时我们也可以借助反射中Class对象的isInstance()方法来判断时候为某个类的实例，他是一个native方法。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 判断是否为某类实例</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">isInstanceTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      Person person = <span class="keyword">new</span> Person();</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// 1、使用instanceof判断</span></span><br><span class="line">      System.out.println(person <span class="keyword">instanceof</span> Person);</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// 2、使用类.isInstance(实例)</span></span><br><span class="line">      System.out.println(Person<span class="class">.<span class="keyword">class</span>.<span class="title">isInstance</span>(<span class="title">person</span>))</span>;</span><br><span class="line">      System.out.println(ReflectCase<span class="class">.<span class="keyword">class</span>.<span class="title">isInstance</span>(<span class="title">person</span>))</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>创建实例：通过反射来生成对象主要有两种方法</p><ul><li>使用Class对象的newInstance()方法来创建Class对象对应类的实例。</li><li>先通过Class对象获取指定的Constructor对象，再调用Constructor对象的newInstance()方法来创建对象，这种方法可以用指定的构造器构造类的实例。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建实例</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 1、使用Class对象的newInstance()方法来创建Class对象对应类的实例</span></span><br><span class="line">        Person person1 = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            person1 = Person<span class="class">.<span class="keyword">class</span>.<span class="title">newInstance</span>()</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InstantiationException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(person1.toString());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、先通过Class对象获取指定的Constructor对象，再调用Constructor对象的newInstance()方法来创建对象，这种方法可以用指定的构造器构造类的实例。</span></span><br><span class="line">        Person person2 = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Constructor&lt;Person&gt; constructor = Person<span class="class">.<span class="keyword">class</span>.<span class="title">getConstructor</span>()</span>;</span><br><span class="line">            person2 = constructor.newInstance();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exceptionalness e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InstantiationException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvocationTargetException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(person2.toString());</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Java反射&quot;&gt;&lt;a href=&quot;#Java反射&quot; class=&quot;headerlink&quot; title=&quot;Java反射&quot;&gt;&lt;/a&gt;Java反射&lt;/h1&gt;&lt;p&gt;[toc]&lt;/p&gt;
&lt;h2 id=&quot;一、什么是反射？&quot;&gt;&lt;a href=&quot;#一、什么是反射？&quot; class=
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hexo-阅读与评论功能</title>
    <link href="https://www.deschen.cn/2023/08/08/Hexo-%E9%98%85%E8%AF%BB%E4%B8%8E%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/"/>
    <id>https://www.deschen.cn/2023/08/08/Hexo-%E9%98%85%E8%AF%BB%E4%B8%8E%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/</id>
    <published>2023-08-08T06:42:34.781Z</published>
    <updated>2022-01-27T06:32:54.722Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo-阅读与评论功能"><a href="#Hexo-阅读与评论功能" class="headerlink" title="Hexo-阅读与评论功能"></a>Hexo-阅读与评论功能</h1><blockquote><p>Hexo支持集成Valine的实现阅读和评论功能</p><p>官方地址：<a href="https://valine.js.org/" target="_blank" rel="noopener">https://valine.js.org/</a></p></blockquote><h2 id="一、LeanCloud相关配置"><a href="#一、LeanCloud相关配置" class="headerlink" title="一、LeanCloud相关配置"></a>一、LeanCloud相关配置</h2><ul><li><p><a href="https://console.leancloud.cn/login?from=%2Fapps" target="_blank" rel="noopener">注册</a>，进入控制台创建应用</p><p><img src="https://deschen-storage.oss-cn-guangzhou.aliyuncs.com/image-20220127135444950.png" alt="image-20220127135444950"></p></li><li><p>进入刚刚创建的应用=》设置=》应用凭证获取AppID 和 AppKey</p><p><img src="https://deschen-storage.oss-cn-guangzhou.aliyuncs.com/image-20220127135715504.png" alt="image-20220127135715504"></p></li><li><p>数据存储=》结构化数据=》创建class，命名：Counter（hexo规定的）并设置为无限制状态。主要用于存储博客的阅读量，充当数据库的作用</p><ul><li>PS：Comment充当记录评论的作用</li></ul><p><img src="https://deschen-storage.oss-cn-guangzhou.aliyuncs.com/image-20220127140905321.png" alt="image-20220127140905321"></p></li></ul><h2 id="二、Hexo集成配置"><a href="#二、Hexo集成配置" class="headerlink" title="二、Hexo集成配置"></a>二、Hexo集成配置</h2><ul><li><p>集成对应依赖</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-leancloud-counter-<span class="keyword">security</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-leancloud-counter-<span class="keyword">security</span> <span class="comment">--save</span></span><br></pre></td></tr></table></figure></li><li><p>修改配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">根目录配置文件_config.yml</span></span><br><span class="line"><span class="attr">leancloud_counter_security:</span></span><br><span class="line">  <span class="attr">enable_sync:</span> <span class="literal">true</span></span><br><span class="line"><span class="string">主题配置文件_config.yml</span></span><br><span class="line"><span class="comment">## 阅读配置</span></span><br><span class="line"><span class="attr">leancloud_visitors:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">app_id:</span> <span class="string">LeanCloud的AppID</span></span><br><span class="line">  <span class="attr">app_key:</span> <span class="string">LeanCloud的AppKey</span></span><br><span class="line">  <span class="comment"># 解决阅读次数Counter not initialized! More info at console err msg异常。针对域名是Https,而valine试用Http</span></span><br><span class="line">  <span class="attr">security:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">betterPerformance:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">## 评论配置</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 启动</span></span><br><span class="line">  <span class="attr">appid:</span>  <span class="string">LeanCloud的AppID</span></span><br><span class="line">  <span class="attr">appkey:</span>  <span class="string">LeanCloud的AppKey</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">请发表有价值的评论，共同维护学习氛围</span>   <span class="comment"># 评论开头显示</span></span><br></pre></td></tr></table></figure></li><li><p>启动并运行，效果如下图</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean  清除</span><br><span class="line">hexo g -d  构建并发布</span><br><span class="line">hexo<span class="built_in"> server </span>启动</span><br></pre></td></tr></table></figure><p><img src="https://deschen-storage.oss-cn-guangzhou.aliyuncs.com/image-20220127143114155.png" alt="image-20220127143114155"></p><p><img src="https://deschen-storage.oss-cn-guangzhou.aliyuncs.com/image-20220127143252645.png" alt="image-20220127143252645"></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Hexo-阅读与评论功能&quot;&gt;&lt;a href=&quot;#Hexo-阅读与评论功能&quot; class=&quot;headerlink&quot; title=&quot;Hexo-阅读与评论功能&quot;&gt;&lt;/a&gt;Hexo-阅读与评论功能&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Hexo支持集成Valine的实现
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>docker-compose + jenkins搭建部署</title>
    <link href="https://www.deschen.cn/2023/08/08/docker-compose%20+%20jenkins%E6%90%AD%E5%BB%BA%E9%83%A8%E7%BD%B2/"/>
    <id>https://www.deschen.cn/2023/08/08/docker-compose%20+%20jenkins%E6%90%AD%E5%BB%BA%E9%83%A8%E7%BD%B2/</id>
    <published>2023-08-08T06:42:34.760Z</published>
    <updated>2021-03-25T01:25:25.603Z</updated>
    
    <content type="html"><![CDATA[<h1 id="docker-compose-jenkins搭建部署"><a href="#docker-compose-jenkins搭建部署" class="headerlink" title="docker-compose + jenkins搭建部署"></a>docker-compose + jenkins搭建部署</h1><p>[toc]</p><h2 id="一、docker的下载安装"><a href="#一、docker的下载安装" class="headerlink" title="一、docker的下载安装"></a>一、docker的下载安装</h2><ul><li><p>docker安装环境条件</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Docker安装环境条件</span><br><span class="line"># <span class="number">1</span>、Docker 运行在 CentOS <span class="number">7</span> 上，要求系统为<span class="number">64</span>位、系统内核版本为 <span class="number">3.10</span> 以上。</span><br><span class="line"># <span class="number">2</span>、Docker 运行在 CentOS<span class="number">-6.5</span> 或更高的版本的 CentOS 上，要求系统为<span class="number">64</span>位、系统内核版本为 <span class="number">2.6</span><span class="number">.32</span><span class="number">-431</span> 或者更高版本。内核编译时需要激活namespace,CGgroup,netfilter,veth等特性，还对iptablest等工具版有依赖要求。</span><br><span class="line"></span><br><span class="line"># 查看linux版本 需要CentOS7版本以上</span><br><span class="line">rpm -q centos-release</span><br><span class="line"># 查看内核版本</span><br><span class="line">uname -r</span><br></pre></td></tr></table></figure></li><li><p>卸载旧的docker</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 卸载旧的安装的组件</span></span><br><span class="line"><span class="attr">sudo</span> <span class="string">yum remove docker \</span></span><br><span class="line">                  <span class="meta">docker-client</span> <span class="string">\</span></span><br><span class="line">                  <span class="meta">docker-client-latest</span> <span class="string">\</span></span><br><span class="line">                  <span class="meta">docker-common</span> <span class="string">\</span></span><br><span class="line">                  <span class="meta">docker-latest</span> <span class="string">\</span></span><br><span class="line">                  <span class="meta">docker-latest-logrotate</span> <span class="string">\</span></span><br><span class="line">                  <span class="meta">docker-logrotate</span> <span class="string">\</span></span><br><span class="line">                  <span class="attr">docker-engine</span></span><br></pre></td></tr></table></figure></li><li><p>安装依赖及设置存储库</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装yum-utils</span></span><br><span class="line"><span class="attr">sudo</span> <span class="string">yum install -y yum-utils</span></span><br><span class="line"><span class="comment"># 设置稳定的存储库</span></span><br><span class="line"><span class="attr">sudo</span> <span class="string">yum-config-manager \</span></span><br><span class="line">    <span class="meta">--add-repo</span> <span class="string">\</span></span><br><span class="line">    <span class="attr">http</span>:<span class="string">//mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span><br></pre></td></tr></table></figure></li><li><p>安装docker</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 直接安装最新Docker引擎和容器</span></span><br><span class="line"><span class="attr">sudo</span> <span class="string">yum -y install docker-ce docker-ce-cli containerd.io</span></span><br><span class="line"><span class="comment"># 安装完成后查看版本</span></span><br><span class="line"><span class="attr">docker</span> <span class="string">-v</span></span><br></pre></td></tr></table></figure><p>或者安装指定版本</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 列出可用版本</span><br><span class="line">yum <span class="keyword">list</span> docker-<span class="keyword">ce</span> --showduplicates | <span class="keyword">sort</span> -r</span><br><span class="line"># 安装指定版本</span><br><span class="line">sudo yum install docker-<span class="keyword">ce</span>-<span class="symbol">&lt;VERSION_STRING&gt;</span> docker-<span class="keyword">ce</span>-cli-<span class="symbol">&lt;VERSION_STRING&gt;</span> containerd.io</span><br><span class="line"># 例子</span><br><span class="line">sudo yum install docker-<span class="keyword">ce</span>-<span class="number">18.09</span>.<span class="number">1</span> docker-<span class="keyword">ce</span>-cli-<span class="number">18.09</span>.<span class="number">1</span> containerd.io</span><br></pre></td></tr></table></figure></li><li><p>docker的操作</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动docker</span></span><br><span class="line">sudo systemctl start docker</span><br><span class="line"><span class="comment"># 停止docker</span></span><br><span class="line">systemctl stop docker</span><br><span class="line"><span class="comment"># 重启</span></span><br><span class="line">systemctl restart docker</span><br><span class="line"><span class="comment"># 查看状态</span></span><br><span class="line">systemctl status docker</span><br><span class="line"><span class="comment"># 设置开机自启动</span></span><br><span class="line">systemctl enable docker</span><br><span class="line"><span class="comment"># 查看信息</span></span><br><span class="line">docker info</span><br><span class="line"><span class="comment"># 查看帮助文档</span></span><br><span class="line">docker --help</span><br><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">- <span class="comment"># 1、卸载 Docker 引擎、CLI 和容器包</span></span><br><span class="line">    sudo yum remove docker-ce docker-ce-cli containerd.io</span><br><span class="line">- <span class="comment"># 2、主机上的图像、容器、卷或自定义配置文件不会自动删除。要删除所有图像、容器和卷</span></span><br><span class="line">    sudo rm -rf /var/<span class="class"><span class="keyword">lib</span>/<span class="title">docker</span></span></span><br><span class="line">- <span class="comment"># 3、必须手动删除任何编辑的配置文件</span></span><br><span class="line">    sudo rm 配置文件</span><br></pre></td></tr></table></figure></li><li><p>验证docker是否安装成功</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下拉并运行hello-world镜像</span></span><br><span class="line">docker <span class="keyword">run</span><span class="bash"> hello-world</span></span><br></pre></td></tr></table></figure></li><li><p>阿里镜像源做为docker镜像源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">》注册阿里账号》搜索：容器镜像》镜像加速器》选择CentOS》直接复制命令运行</span><br></pre></td></tr></table></figure><p><img src="https://deschen-storage.oss-cn-guangzhou.aliyuncs.com/image-20210323111816853.png" alt="image-20210323111816853"></p></li></ul><h2 id="二、docker-compose安装"><a href="#二、docker-compose安装" class="headerlink" title="二、docker-compose安装"></a>二、docker-compose安装</h2><ul><li><p>docker-compose安装</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -L https:<span class="regexp">//gi</span>thub.com<span class="regexp">/docker/</span>compose<span class="regexp">/releases/</span>download<span class="regexp">/1.21.2/</span>docker-compose-$(uname -s)-$(uname -m) -o <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>docker-compose</span><br><span class="line">sudo chmod +x <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>docker-compose</span><br><span class="line"><span class="comment"># 1.21.2 是docker-compose版本，可以根据自己需求在github查找版本</span></span><br><span class="line"><span class="comment"># docker-compose-$(uname -s)-$(uname -m)  在centos7中输出为docker-compose-Linux-x86_64</span></span><br></pre></td></tr></table></figure></li><li><p>docker-compose命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker-compose 命令默认使用的配置文件是当前目录中的 docker-compose.yml 文件</span></span><br><span class="line">docker<span class="literal">-compose</span> up</span><br><span class="line"><span class="comment"># -f 指定其他配置文件。可以添加多个 -f 选项，docker-compose 会自动合并它们，当然也会根据先后顺序把一些重复的配置项覆盖掉</span></span><br><span class="line"><span class="comment"># 自动完成包括构建镜像，(重新)创建服务，启动服务，并关联服务相关容器的一系列操作。不过在前台打印信息，ctrl+c容器就会停止</span></span><br><span class="line">docker<span class="literal">-compose</span> <span class="operator">-f</span> docker<span class="literal">-compose</span>.yml <span class="operator">-f</span> docker<span class="literal">-compose</span><span class="literal">-dev</span> up </span><br><span class="line"><span class="comment"># 后台启动并运行</span></span><br><span class="line">docker<span class="literal">-compose</span> <span class="operator">-f</span> docker<span class="literal">-compose</span>.yml <span class="operator">-f</span> docker<span class="literal">-compose</span><span class="literal">-dev</span> up <span class="literal">-d</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="三、docker-compose-jenkins部署"><a href="#三、docker-compose-jenkins部署" class="headerlink" title="三、docker-compose+jenkins部署"></a>三、docker-compose+jenkins部署</h2><ul><li><p>关于jenkins的docker-compose.yml文件</p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">version: '3.1'</span><br><span class="line">services:</span><br><span class="line">  jenkins:</span><br><span class="line">    image: jenkins/jenkins:lts</span><br><span class="line">    volumes:       # 挂载目录  本地文件夹目录:容器文件夹目录</span><br><span class="line">      -<span class="ruby"> /data/jenkins/<span class="symbol">:/var/jenkins_home</span></span></span><br><span class="line"><span class="ruby">      - <span class="regexp">/var/run</span><span class="regexp">/docker.sock:/var</span><span class="regexp">/run/docker</span>.sock</span></span><br><span class="line"><span class="ruby">      - <span class="regexp">/usr/bin</span><span class="regexp">/docker:/usr</span><span class="regexp">/bin/docker</span></span></span><br><span class="line"><span class="ruby">      - <span class="regexp">/usr/lib</span><span class="regexp">/x86_64-linux-gnu/libltdl</span>.so.<span class="number">7</span><span class="symbol">:/usr/lib/x86_64-linux-gnu/libltdl</span>.so.<span class="number">7</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">ports:</span>   <span class="comment"># 绑定端口</span></span></span><br><span class="line"><span class="ruby">      - <span class="string">"8080:8080"</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">expose:</span>  <span class="comment"># 暴露端口</span></span></span><br><span class="line"><span class="ruby">      - <span class="string">"8080"</span></span></span><br><span class="line"><span class="ruby">      - <span class="string">"50000"</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">privileged:</span> <span class="literal">true</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">user:</span> root</span></span><br><span class="line"><span class="ruby">    <span class="symbol">restart:</span> always</span></span><br><span class="line"><span class="ruby">    <span class="symbol">container_name:</span> jenkins</span></span><br><span class="line"><span class="ruby">    <span class="symbol">environment:</span></span></span><br><span class="line"><span class="ruby">      <span class="symbol">JAVA_OPTS:</span> <span class="string">'-Djava.util.logging.config.file=/var/jenkins_home/log.properties'</span></span></span><br></pre></td></tr></table></figure></li><li><p>在docker-compose.yml的目录输入<code>docker-compose up -d</code></p></li><li><p>输入网址 ip + 端口访问，若显示页面，则jenkins启动成功</p><p><img src="https://deschen-storage.oss-cn-guangzhou.aliyuncs.com/image-20210325092428652.png" alt="image-20210325092428652"></p></li></ul><h2 id="四、异常处理"><a href="#四、异常处理" class="headerlink" title="四、异常处理"></a>四、异常处理</h2><ol><li>如果创建任务时，没有maven项目选项，则在下载安装对应maven插件</li><li>如果构建环境没有send ssh选项，则下载安装对应Publish Over SSH插件</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;docker-compose-jenkins搭建部署&quot;&gt;&lt;a href=&quot;#docker-compose-jenkins搭建部署&quot; class=&quot;headerlink&quot; title=&quot;docker-compose + jenkins搭建部署&quot;&gt;&lt;/a&gt;docker
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>面试题-MySQL</title>
    <link href="https://www.deschen.cn/2023/02/10/%E9%9D%A2%E8%AF%95%E9%A2%98-MySQL/"/>
    <id>https://www.deschen.cn/2023/02/10/%E9%9D%A2%E8%AF%95%E9%A2%98-MySQL/</id>
    <published>2023-02-10T14:45:54.000Z</published>
    <updated>2023-11-18T15:59:11.646Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MySQL面试题"><a href="#MySQL面试题" class="headerlink" title="MySQL面试题"></a>MySQL面试题</h2><h3 id="MySQL-事务ACID特征"><a href="#MySQL-事务ACID特征" class="headerlink" title="MySQL 事务ACID特征"></a>MySQL 事务ACID特征</h3><ul><li>原子性：事务最小执行单位。要么全部成功，要么全部失败</li><li>一致性：执行事务前后，数据保持一致。</li><li>隔离性：一个用户的事务不被其他事务所干扰</li><li>持久性：事务一旦提交，对数据的改变是永久的</li></ul><h3 id="并发事务带来的问题"><a href="#并发事务带来的问题" class="headerlink" title="并发事务带来的问题"></a>并发事务带来的问题</h3><ul><li>脏读：事务A读取到事务B未提交的数据</li><li>丢失更新：事务A 修改了数据后，事务B 也修改这个数据，导致事务A的修饰结果丢失</li><li>不可重复度：事务A 因为 事务B的修改，导致前后读取的数据不一样</li><li>幻读：事务A因为事务B的插入，导致前后查询发现多了原先不存在的数据<ul><li>mysql 针对幻读处理</li><li>针对快照都（select），通过MVCC解决幻读，读取到的数据是事务启动看到的数据，即使发生插入也不会查询到，避免幻读</li><li>针对当前读（select for update）,通过next-key(记录锁+间隙锁)解决幻读，当执行select for update操作，就会插入next-key，如果由其他事务在锁范围内，就会阻塞无法插入成功，避免幻读</li></ul></li></ul><h3 id="SQL的隔离级别"><a href="#SQL的隔离级别" class="headerlink" title="SQL的隔离级别"></a>SQL的隔离级别</h3><ul><li>读未提交：读取未提交的数据，会导致脏读、幻读、不可重复读</li><li>读已提交：读取已提交的数据，会导致不可重复度和幻读</li><li>可重复读：同一事务，多次读取的数据结果一致，但是幻读可能会发生</li><li>串行化：事务逐个执行，能解决所有问题，不过效率最低</li></ul><h3 id="什么是索引"><a href="#什么是索引" class="headerlink" title="什么是索引"></a>什么是索引</h3><ul><li>帮助存储引擎快速获取数据的一种数据结构 </li></ul><h3 id="索引的分类"><a href="#索引的分类" class="headerlink" title="索引的分类"></a>索引的分类</h3><ul><li>「数据结构」分类：<strong>B+tree索引、Hash索引、Full-text索引</strong></li><li>「物理存储」分类：<strong>聚簇索引（主键索引）、非聚簇索引（辅助索引）</strong>。</li><li>[字段特性」分类：<strong>主键索引、唯一索引、普通索引、前缀索引</strong>。</li><li>「字段个数」分类：<strong>单列索引、联合索引</strong>。</li></ul><h3 id="什么是B-树索引"><a href="#什么是B-树索引" class="headerlink" title="什么是B+树索引"></a>什么是B+树索引</h3><ul><li>B+Tree 是一种多叉树，叶子节点才存放数据，非叶子节点只存放索引，且节点按索引排序。父节点的索引都出现在下一层的节点中，叶子节点都有两个指针指向上一个叶子节点和下一个叶子节点，形成双向链表</li><li>为什么使用B+树<ul><li>因为B+树存储千万级数据数据只需3-4层，也就意味着最多只进行3-4层的磁盘I/O，查询效率高</li><li>与B树相比，优势<ul><li>B+树非叶子节点存放索引，叶子节点存放数据，而B树所有节点存放数据，那么在相同磁盘I/O下，B+树读取的数据量更多，查询效率更高</li><li>B+树叶子节点采用双向链表，适合范围查询，而B树无法做到这点</li></ul></li><li>与二叉树相比<ul><li>二叉树每个节点最多只有两个子节点，数据量越大，那么高度越高，磁盘I/O次数就更多，查询性能大大减低；而B+树，千万级数据的高度也就3-4层</li></ul></li><li>与Hah相比<ul><li>hash索引适合等值查询，不适合范围查找；B+树比hash广泛的应用场景</li></ul></li></ul></li></ul><h3 id="什么是回表"><a href="#什么是回表" class="headerlink" title="什么是回表"></a>什么是回表</h3><ul><li><p>一般发生在非聚簇索引中，即查询的数据不在非聚簇索引中，导致根据主键重新在主键索引查询</p></li><li><p>而如果查询的数据存在非聚簇索引中，那么叫做覆盖索引</p></li></ul><h3 id="聚簇索引和非聚簇索引的区别"><a href="#聚簇索引和非聚簇索引的区别" class="headerlink" title="聚簇索引和非聚簇索引的区别"></a>聚簇索引和非聚簇索引的区别</h3><ul><li>在于叶子节点是否存储完整数据还是主键索引，完整数据是聚簇索引，主键索引是非聚簇索引</li></ul><h3 id="前缀索引"><a href="#前缀索引" class="headerlink" title="前缀索引"></a>前缀索引</h3><ul><li>字符串类型前面几个字符组成的索引</li></ul><h3 id="联合索引"><a href="#联合索引" class="headerlink" title="联合索引"></a>联合索引</h3><ul><li>多个字段组合成一个索引</li><li>使用联合索引时，存在<strong>最左匹配原则</strong>，按照最左优先进行索引匹配，否则索引失效</li><li>并不是所有的字段都用到联合索引，比如范围查询；范围查询的字段用联合索引，查询字段后面无法用联合索引<ul><li>比如 where a &gt; 1 and b &gt; 2; 这种情况根据a进行范围查询，范围中b是无序的，b没有用到范围索引；也可以通过explain的 key_len判断索引用到了那些字段，一般</li><li>但是 where a &gt;=1 and b &gt;2 就不一样了，因为在 a == 1中，b又是有序的，组成俩和索引</li></ul></li></ul><h3 id="索引下推"><a href="#索引下推" class="headerlink" title="索引下推"></a>索引下推</h3><ul><li>在联合索引遍历过程中，对联合索引中包含的字段先做判断，直接过滤掉不满足条件的记录，减少回表次数。</li></ul><h3 id="索引区分度"><a href="#索引区分度" class="headerlink" title="索引区分度"></a>索引区分度</h3><ul><li><strong>**建立联合索引时</strong>，要把区分度大的字段排在前面，这样区分度大的字段越有可能被更多的 SQL 使用到**。</li></ul><h3 id="什么时候需要-不需要创建索引"><a href="#什么时候需要-不需要创建索引" class="headerlink" title="什么时候需要 / 不需要创建索引"></a>什么时候需要 / 不需要创建索引</h3><ul><li>优缺点：索引虽然能提高查询效率，不过索引越多，维护成本越高，占用的空间越大，减低增删改的效率</li><li>什么使用用？<ul><li>常用where 、order by、 group by的场景，因为索引是排好序的</li><li>字段唯一限制</li></ul></li><li>不需要用<ul><li><code>WHERE</code> 条件，<code>GROUP BY</code>，<code>ORDER BY</code> 里用不到的字段</li><li>字段存在存在大量重复数据，查询优化器会将其索引忽略，全表扫描</li><li>经常更新的字段不用创建索引</li></ul></li></ul><h3 id="优化索引的方法"><a href="#优化索引的方法" class="headerlink" title="优化索引的方法"></a>优化索引的方法</h3><ul><li><p>前缀索引优化：一些大字符串的字段作为索引时，使用前缀索引可以帮助我们减小索引项的大小，提高查询效率</p><ul><li>order by 就无法使用前缀索引</li><li>无法把前缀索引用作覆盖索引</li></ul></li><li><p>覆盖索引优化：非聚簇索引能够查询到的记录，避免回表</p></li><li><p>主键索引最好是自增的</p><ul><li><strong>使用自增主键</strong>，那么每次插入的新数据就会按顺序添加到当前索引节点的位置，不需要移动已有的数据</li><li><strong>使用非自增主键</strong>，插入新的数据时，就可能会插入到现有数据页中间的某个位置，这将不得不移动其它数据来满足新数据的插入，甚至需要从一个页面复制数据到另外一个页面，我们通常将这种情况称为<strong>页分裂</strong>。<strong>页分裂还有可能会造成大量的内存碎片，导致索引结构不紧凑，从而影响查询效率</strong>。</li></ul></li><li><p>索引最好设置NOT NULL</p><ul><li>避免使查询优化器的优化更复杂，因为null会使索引、索引统计更复杂。比如count会省略null数据</li><li>NULL 值是一个没意义的值，但是它会占用物理空间，所以会带来的存储空间的问题</li></ul></li><li><h3 id="防止索引失效"><a href="#防止索引失效" class="headerlink" title="防止索引失效"></a>防止索引失效</h3><ul><li>模糊查询针对右模糊，不然索引失效</li><li>避免索引列做了计算、函数、类型转换操作，不然索引失效</li><li>联合索引遵循最左匹配原则，不然索引失效</li><li>WHERE 子句中，如果在 OR 前的条件列是索引，后面不是索引索引失效</li></ul></li></ul><h3 id="MySQL-锁"><a href="#MySQL-锁" class="headerlink" title="MySQL 锁"></a>MySQL 锁</h3><ul><li><p>表级锁</p><ul><li>表锁：锁整张表</li><li>意向锁：在对某记录插入排他锁或者共享锁前，在表级别添加意向共享锁和意向排他锁，用于快速判断记录是否被加锁</li></ul></li><li><p>行级锁</p><ul><li>共享锁：读读共享，读写互斥</li><li>排他锁：写写互斥，读写互斥</li><li>类型划分<ul><li>记录锁：锁住一条行数据</li><li>间隙锁：锁定一个范围：间隙锁主要防止幻读，即插入问题；而不会阻止其他事务获取同一个范围的间隙锁的</li><li>临键锁：锁定一个范围，并且锁定记录本身</li><li>插入意向锁：插入被其他事务加了间隙锁，导致阻塞同时生成插入意向锁，表明该事务想要插入新记录</li></ul></li></ul><p>消息失效、消息发送，导致死锁原因</p><p>并发更新，导致事务A、B更新获得相同间隙的间隙锁，导致事务A插入数据阻塞，同而lock wait timeout异常</p></li></ul><h3 id="事务传播行为"><a href="#事务传播行为" class="headerlink" title="事务传播行为"></a>事务传播行为</h3><ul><li>Propagation.REQUIRED：默认的事务传播级别，它表示如果当前存在事务，则加入该事务；如果当前没有事务，则创建一个新的事务。</li><li>Propagation.SUPPORTS：如果当前存在事务，则加入该事务；如果当前没有事务，则以非事务的方式继续运行。</li><li>Propagation.MANDATORY：（mandatory：强制性）如果当前存在事务，则加入该事务；如果当前没有事务，则抛出异常。</li><li>Propagation.REQUIRES_NEW：表示创建一个新的事务，如果当前存在事务，则把当前事务挂起。也就是说不管外部方法是否开启事务，Propagation.REQUIRES_NEW 修饰的内部方法会新开启自己的事务，且开启的事务相互独立，互不干扰。</li><li>Propagation.NOT_SUPPORTED：以非事务方式运行，如果当前存在事务，则把当前事务挂起。</li><li>Propagation.NEVER：以非事务方式运行，如果当前存在事务，则抛出异常。</li><li>Propagation.NESTED：如果当前存在事务，则创建一个事务作为当前事务的嵌套事务来运行；如果当前没有事务，则该取值等价于 PROPAGATION_REQUIRED。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;MySQL面试题&quot;&gt;&lt;a href=&quot;#MySQL面试题&quot; class=&quot;headerlink&quot; title=&quot;MySQL面试题&quot;&gt;&lt;/a&gt;MySQL面试题&lt;/h2&gt;&lt;h3 id=&quot;MySQL-事务ACID特征&quot;&gt;&lt;a href=&quot;#MySQL-事务ACID特征&quot;
      
    
    </summary>
    
    
      <category term="面试" scheme="https://www.deschen.cn/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
      <category term="MySQL" scheme="https://www.deschen.cn/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-中介者模式</title>
    <link href="https://www.deschen.cn/2022/02/17/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E4%B8%AD%E4%BB%8B%E8%80%85%E6%A8%A1%E5%BC%8F/"/>
    <id>https://www.deschen.cn/2022/02/17/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E4%B8%AD%E4%BB%8B%E8%80%85%E6%A8%A1%E5%BC%8F/</id>
    <published>2022-02-17T15:50:10.000Z</published>
    <updated>2023-05-25T01:36:47.873Z</updated>
    
    <content type="html"><![CDATA[<h1 id="设计模式-中介者模式"><a href="#设计模式-中介者模式" class="headerlink" title="设计模式-中介者模式"></a>设计模式-中介者模式</h1><h2 id="一、详解"><a href="#一、详解" class="headerlink" title="一、详解"></a>一、详解</h2><ul><li>概念：定义一个<strong>中介者对象</strong>，<strong>封装一组对象</strong>，<strong>协调和管理</strong>调用者与对象之间的<strong>交互</strong>，减低对象间<strong>耦合度</strong></li><li>主要用途<ul><li>解耦对象之间的关系：如果交互关系发生变化，只需修改中介者对象，无需对对象进行处理</li><li>集中控制和管理对象交互，提高系统的可维护性和灵活性</li></ul></li><li>代码：中介者、交互的对象</li></ul><h2 id="二、代码"><a href="#二、代码" class="headerlink" title="二、代码"></a>二、代码</h2><ul><li><p>以消息通信为例：文件上传时，通知文件存储、搜索引擎、日志模块处理上传的文件</p></li><li><p>中介者：消息中介者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MsgMediator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 主题与消费者订阅关系</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;Topic, List&lt;IConsumer&gt;&gt; subscribe;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MsgMediator</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        subscribe = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        subscribe.put(Topic.FILE_UPLOAD, <span class="keyword">new</span> ArrayList&lt;IConsumer&gt;() &#123;</span><br><span class="line">            &#123;</span><br><span class="line">                add(<span class="keyword">new</span> FileStorageConsumer());</span><br><span class="line">                add(<span class="keyword">new</span> FileSearchConsumer());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        subscribe.put(Topic.WRITE_LOG, <span class="keyword">new</span> ArrayList&lt;IConsumer&gt;()&#123;</span><br><span class="line">            &#123;</span><br><span class="line">                add(<span class="keyword">new</span> LogConsumer());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMsg</span><span class="params">(Topic topic, String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;Topic, List&lt;IConsumer&gt;&gt; entry : subscribe.entrySet()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (entry.getKey() == topic) &#123;</span><br><span class="line">                <span class="keyword">for</span> (IConsumer consumer : entry.getValue()) &#123;</span><br><span class="line">                    consumer.handle(topic, msg);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addSubscribe</span><span class="params">(Topic topic, IConsumer consumer)</span> </span>&#123;</span><br><span class="line">        List&lt;IConsumer&gt; consumers = subscribe.get(topic);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == consumers) &#123;</span><br><span class="line">            consumers = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        consumers.add(consumer);</span><br><span class="line">        subscribe.put(topic, consumers);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>交互对象：消费者对象集合</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 消费者接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IConsumer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 消费消息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> topic 主题</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> msg 消息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">handle</span><span class="params">(Topic topic, String msg)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 文件搜索引擎消费者</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileSearchConsumer</span> <span class="keyword">implements</span> <span class="title">IConsumer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">(Topic topic, String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (topic) &#123;</span><br><span class="line">            <span class="keyword">case</span> FILE_UPLOAD:</span><br><span class="line">                handleUploadFile(msg);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleUploadFile</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"【FileSearchConsumer】将消息反序列化成对象"</span>);</span><br><span class="line">        System.out.println(<span class="string">"【FileSearchConsumer】根据对象参数，更新搜索引擎索引"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 文件存储消费者</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileStorageConsumer</span> <span class="keyword">implements</span> <span class="title">IConsumer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">(Topic topic, String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (topic) &#123;</span><br><span class="line">            <span class="keyword">case</span> FILE_UPLOAD:</span><br><span class="line">                handleUploadFile(msg);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleUploadFile</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"【FileStorageConsumer】将消息反序列化成对象"</span>);</span><br><span class="line">        System.out.println(<span class="string">"【FileStorageConsumer】根据对象参数，保存文件到存储引擎，同时存储文件管理系统与存储引擎的关系"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 日志消费者</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogConsumer</span> <span class="keyword">implements</span> <span class="title">IConsumer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">(Topic topic, String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (topic) &#123;</span><br><span class="line">            <span class="keyword">case</span> WRITE_LOG:</span><br><span class="line">                writeLog(msg);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">writeLog</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"【LogConsumer】将消息反序列化成对象"</span>);</span><br><span class="line">        System.out.println(<span class="string">"【LogConsumer】根据对象参数，记录文件上传日志"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>消息主题</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> Topic &#123;</span><br><span class="line"></span><br><span class="line">    FILE_UPLOAD,</span><br><span class="line"></span><br><span class="line">    WRITE_LOG,</span><br><span class="line">    ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>用例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        MsgMediator mediator = <span class="keyword">new</span> MsgMediator();</span><br><span class="line">        mediator.sendMsg(Topic.FILE_UPLOAD, <span class="string">"&#123;\"fileId\": 1,\"fileName\": \"resource.txt\",\"filePath\": \"/resources\",\"uploader\": \"张三\",\"uploadTime\": \"2022-02-17\"&#125;"</span>);</span><br><span class="line">        mediator.sendMsg(Topic.WRITE_LOG, <span class="string">"&#123;\"fileId\": 1,\"fileName\": \"resource.txt\",\"filePath\": \"/resources\",\"uploader\": \"张三\",\"uploadTime\": \"2022-02-17\"&#125;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line">【FileStorageConsumer】将消息反序列化成对象</span><br><span class="line">【FileStorageConsumer】根据对象参数，保存文件到存储引擎，同时存储文件管理系统与存储引擎的关系</span><br><span class="line">【FileSearchConsumer】将消息反序列化成对象</span><br><span class="line">【FileSearchConsumer】根据对象参数，更新搜索引擎索引</span><br><span class="line">【LogConsumer】将消息反序列化成对象</span><br><span class="line">【LogConsumer】根据对象参数，记录文件上传日志</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;设计模式-中介者模式&quot;&gt;&lt;a href=&quot;#设计模式-中介者模式&quot; class=&quot;headerlink&quot; title=&quot;设计模式-中介者模式&quot;&gt;&lt;/a&gt;设计模式-中介者模式&lt;/h1&gt;&lt;h2 id=&quot;一、详解&quot;&gt;&lt;a href=&quot;#一、详解&quot; class=&quot;head
      
    
    </summary>
    
    
      <category term="设计模式" scheme="https://www.deschen.cn/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="中介者模式" scheme="https://www.deschen.cn/tags/%E4%B8%AD%E4%BB%8B%E8%80%85%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-访问者模式</title>
    <link href="https://www.deschen.cn/2022/02/16/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F/"/>
    <id>https://www.deschen.cn/2022/02/16/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F/</id>
    <published>2022-02-16T15:12:35.000Z</published>
    <updated>2023-05-23T08:30:51.647Z</updated>
    
    <content type="html"><![CDATA[<h1 id="设计模式-访问者模式"><a href="#设计模式-访问者模式" class="headerlink" title="设计模式-访问者模式"></a>设计模式-访问者模式</h1><h2 id="一、详解"><a href="#一、详解" class="headerlink" title="一、详解"></a>一、详解</h2><ul><li>概念：定义<strong>访问者接口</strong>和<strong>一组具体的访问者类</strong>，将<strong>访问对象</strong> <strong>注入</strong> <strong>被访问者对象</strong>中，实现对被访问者对象的<strong>访问和操作</strong></li><li>主要用途：将数据结构和操作分离。通过新增访问者，不修改对被访问者结构情况下，实现新的功能</li><li>代码：访问者接口、一组具体访问者类、被访问者类</li></ul><h2 id="二、代码"><a href="#二、代码" class="headerlink" title="二、代码"></a>二、代码</h2><ul><li><p>以患者病历在不同角色展示信息为例</p></li><li><p>访问者接口：角色访问病历</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IVisitor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 访问病历信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> record</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">visit</span><span class="params">(MedicalRecord record)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>一组具体访问者类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 医生</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Doctor</span> <span class="keyword">implements</span> <span class="title">IVisitor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">visit</span><span class="params">(MedicalRecord record)</span> </span>&#123;</span><br><span class="line">        StringBuilder builder = <span class="keyword">new</span> StringBuilder(<span class="string">"医生访问患者病历信息\n"</span>);</span><br><span class="line">        builder.append(<span class="string">"姓名："</span>).append(record.getPatient().getName()).append(<span class="string">"\n"</span>);</span><br><span class="line">        builder.append(<span class="string">"身份证："</span>).append(record.getPatient().getIdCard()).append(<span class="string">"\n"</span>);</span><br><span class="line">        builder.append(<span class="string">"病情："</span>).append(record.getIllness()).append(<span class="string">"\n"</span>);</span><br><span class="line">        builder.append(<span class="string">"药方："</span>).append(record.getPrescription()).append(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(builder.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 护士</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Nurse</span> <span class="keyword">implements</span> <span class="title">IVisitor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">visit</span><span class="params">(MedicalRecord record)</span> </span>&#123;</span><br><span class="line">        StringBuilder builder = <span class="keyword">new</span> StringBuilder(<span class="string">"护士访问患者病历信息\n"</span>);</span><br><span class="line">        builder.append(<span class="string">"姓名："</span>).append(record.getPatient().getName()).append(<span class="string">"\n"</span>);</span><br><span class="line">        builder.append(<span class="string">"身份证："</span>).append(record.getPatient().getIdCard()).append(<span class="string">"\n"</span>);</span><br><span class="line">        builder.append(<span class="string">"金额："</span>).append(record.getPatient().getAmount()).append(<span class="string">"\n"</span>);</span><br><span class="line">        builder.append(<span class="string">"药方："</span>).append(record.getPrescription()).append(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(builder.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 患者</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Patient</span> <span class="keyword">implements</span> <span class="title">IVisitor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">visit</span><span class="params">(MedicalRecord record)</span> </span>&#123;</span><br><span class="line">        StringBuilder builder = <span class="keyword">new</span> StringBuilder(<span class="string">"患者访问患者病历信息\n"</span>);</span><br><span class="line">        builder.append(<span class="string">"姓名："</span>).append(record.getPatient().getName()).append(<span class="string">"\n"</span>);</span><br><span class="line">        builder.append(<span class="string">"身份证："</span>).append(record.getPatient().getIdCard()).append(<span class="string">"\n"</span>);</span><br><span class="line">        builder.append(<span class="string">"地址："</span>).append(record.getPatient().getAddress()).append(<span class="string">"\n"</span>);</span><br><span class="line">        builder.append(<span class="string">"金额："</span>).append(record.getPatient().getAmount()).append(<span class="string">"\n"</span>);</span><br><span class="line">        builder.append(<span class="string">"病情："</span>).append(record.getIllness()).append(<span class="string">"\n"</span>);</span><br><span class="line">        builder.append(<span class="string">"药方："</span>).append(record.getPrescription()).append(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(builder.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>被访问者类：患者病历</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MedicalRecord</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> PatientInfo patientInfo;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String illness;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String prescription;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">accept</span><span class="params">(IVisitor visitor)</span> </span>&#123;</span><br><span class="line">        visitor.visit(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PatientInfo <span class="title">getPatient</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> patientInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPatient</span><span class="params">(PatientInfo patientInfo)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.patientInfo = patientInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getIllness</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> illness;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIllness</span><span class="params">(String illness)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.illness = illness;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPrescription</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> prescription;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPrescription</span><span class="params">(String prescription)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.prescription = prescription;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">PatientInfo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> String idCard;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> Long amount;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> name;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.name = name;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getIdCard</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> idCard;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIdCard</span><span class="params">(String idCard)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.idCard = idCard;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> address;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddress</span><span class="params">(String address)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.address = address;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Long <span class="title">getAmount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> amount;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAmount</span><span class="params">(Long amount)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.amount = amount;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>用例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        MedicalRecord record = <span class="keyword">new</span> MedicalRecord();</span><br><span class="line">        MedicalRecord.PatientInfo patientInfo = <span class="keyword">new</span> MedicalRecord.PatientInfo();</span><br><span class="line">        patientInfo.setName(<span class="string">"张三"</span>);</span><br><span class="line">        patientInfo.setIdCard(<span class="string">"440582199902020202"</span>);</span><br><span class="line">        patientInfo.setAddress(<span class="string">"XX省XX市XX区XX"</span>);</span><br><span class="line">        patientInfo.setAmount(<span class="number">100000000L</span>);</span><br><span class="line">        record.setPatient(patientInfo);</span><br><span class="line">        record.setIllness(<span class="string">"感冒"</span>);</span><br><span class="line">        record.setPrescription(<span class="string">"感冒药"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 同一份数据，针对不同角色，展示不同信息</span></span><br><span class="line"><span class="comment">         * 医生：患者姓名、身份证、病情、药方</span></span><br><span class="line"><span class="comment">         * 护士：患者姓名、身份证、金额、药方</span></span><br><span class="line"><span class="comment">         * 患者：患者姓名、身份证、地址、金额、病情、药方</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        IVisitor visitor = <span class="keyword">new</span> Doctor();</span><br><span class="line">        record.accept(visitor);</span><br><span class="line"></span><br><span class="line">        visitor = <span class="keyword">new</span> Nurse();</span><br><span class="line">        record.accept(visitor);</span><br><span class="line"></span><br><span class="line">        visitor = <span class="keyword">new</span> Patient();</span><br><span class="line">        record.accept(visitor);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line">医生访问患者病历信息</span><br><span class="line">姓名：张三</span><br><span class="line">身份证：<span class="number">440582199902020202</span></span><br><span class="line">病情：感冒</span><br><span class="line">药方：感冒药</span><br><span class="line"></span><br><span class="line">护士访问患者病历信息</span><br><span class="line">姓名：张三</span><br><span class="line">身份证：<span class="number">440582199902020202</span></span><br><span class="line">金额：<span class="number">100000000</span></span><br><span class="line">药方：感冒药</span><br><span class="line"></span><br><span class="line">患者访问患者病历信息</span><br><span class="line">姓名：张三</span><br><span class="line">身份证：<span class="number">440582199902020202</span></span><br><span class="line">地址：XX省XX市XX区XX</span><br><span class="line">金额：<span class="number">100000000</span></span><br><span class="line">病情：感冒</span><br><span class="line">药方：感冒药</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;设计模式-访问者模式&quot;&gt;&lt;a href=&quot;#设计模式-访问者模式&quot; class=&quot;headerlink&quot; title=&quot;设计模式-访问者模式&quot;&gt;&lt;/a&gt;设计模式-访问者模式&lt;/h1&gt;&lt;h2 id=&quot;一、详解&quot;&gt;&lt;a href=&quot;#一、详解&quot; class=&quot;head
      
    
    </summary>
    
    
      <category term="设计模式" scheme="https://www.deschen.cn/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="访问者模式" scheme="https://www.deschen.cn/tags/%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-解释器模式</title>
    <link href="https://www.deschen.cn/2022/02/15/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A7%A3%E9%87%8A%E5%99%A8%E6%A8%A1%E5%BC%8F/"/>
    <id>https://www.deschen.cn/2022/02/15/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A7%A3%E9%87%8A%E5%99%A8%E6%A8%A1%E5%BC%8F/</id>
    <published>2022-02-15T15:12:35.000Z</published>
    <updated>2023-05-23T06:59:01.685Z</updated>
    
    <content type="html"><![CDATA[<h1 id="设计模式-解释器模式"><a href="#设计模式-解释器模式" class="headerlink" title="设计模式-解释器模式"></a>设计模式-解释器模式</h1><h2 id="一、详解"><a href="#一、详解" class="headerlink" title="一、详解"></a>一、详解</h2><ul><li>概念：用于<strong>解析</strong>和<strong>解释</strong> <strong>语言</strong>的行为模式。定义统一<strong>解释</strong>的<strong>抽象类解释器接口</strong>，以及<strong>终结符解释器</strong>和<strong>非终结符解释器</strong>两种实现类。终结符解释器解释<strong>无法再分解的语言单元</strong>，非终结符解释器解释<strong>由终结符组成的语法规则</strong>，如表达式等。结合<strong>提供全局信息的上下文</strong>对语言进行解析和解释</li><li>主要用途：<ul><li>解析和解释语法规则，通过解释器逐个解释和执行规则</li><li>新增或者修改原有规则时，只需扩展新的解释器，无需修改原有代码</li></ul></li><li>代码：抽象类解释器、终止符解释器、非终止符解释器、提供全局信息的上下文</li></ul><h2 id="二、代码"><a href="#二、代码" class="headerlink" title="二、代码"></a>二、代码</h2><blockquote><p>案例参考《设计模式就该这样学》</p></blockquote><ul><li><p>以数字运算表达式为例：计算表达式的值</p></li><li><p>抽象类解释器：输出结果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Expression</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">interpreter</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>终结符解释器：输出数字</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NumberExpression</span> <span class="keyword">implements</span> <span class="title">Expression</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> value;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NumberExpression</span><span class="params">(<span class="keyword">int</span> value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.value = value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">interpreter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>非终结符表达式：输出两个数字运算结果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BinaryExpression</span> <span class="keyword">implements</span> <span class="title">Expression</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 左操作数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Expression leftOperand;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 右边操作数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Expression rightOperand;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 操作符</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String operator;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BinaryExpression</span><span class="params">(Expression leftOperand, String operator, Expression rightOperand)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.leftOperand = leftOperand;</span><br><span class="line">        <span class="keyword">this</span>.operator = operator;</span><br><span class="line">        <span class="keyword">this</span>.rightOperand = rightOperand;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">interpreter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (operator) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"+"</span>:</span><br><span class="line">                <span class="keyword">return</span> leftOperand.interpreter() + rightOperand.interpreter();</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"-"</span>:</span><br><span class="line">                <span class="keyword">return</span> leftOperand.interpreter() - rightOperand.interpreter();</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"*"</span>:</span><br><span class="line">                <span class="keyword">return</span> leftOperand.interpreter() * rightOperand.interpreter();</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"/"</span>: &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="number">0</span> == rightOperand.interpreter()) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"被除数不能为0"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> leftOperand.interpreter() / rightOperand.interpreter();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"非法运算符: "</span> + operator);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>提供全局信息的上下文</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.deschen.designPattern.interpreter.expression;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> hanbin_chen</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 算法上下文</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> V1.0.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MathExpressionContext</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 操作数栈</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Stack&lt;Expression&gt; numberStack;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 操作符</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Stack&lt;String&gt; operatorStack;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 计算表达式的值</span></span><br><span class="line"><span class="comment">     * 有括号先算括号里面的，在乘除，后加减</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> expression</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">calculate</span><span class="params">(String expression)</span> </span>&#123;</span><br><span class="line">        numberStack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        operatorStack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 表达式按照空格切割成字符</span></span><br><span class="line">        String[] symbols = formatExpression(expression).split(<span class="string">"\\s+"</span>);</span><br><span class="line">        <span class="comment">// 遍历字符</span></span><br><span class="line">        <span class="keyword">for</span> (String symbol : symbols) &#123;</span><br><span class="line">            <span class="comment">// 如果是数值，则入操作数栈</span></span><br><span class="line">            <span class="keyword">if</span> (isNumber(symbol)) &#123;</span><br><span class="line">                numberStack.push(<span class="keyword">new</span> NumberExpression(Integer.valueOf(symbol)));</span><br><span class="line">                System.out.println(<span class="string">"操作数入栈："</span> + symbol);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 如果是加减法</span></span><br><span class="line"><span class="comment">             * 1、如果前面有加减乘除，计算前面的表达式，更新操作符栈和操作数栈</span></span><br><span class="line"><span class="comment">             * 2、把操作符在入栈</span></span><br><span class="line"><span class="comment">              */</span></span><br><span class="line">            <span class="keyword">if</span> (isAdd(symbol) || isSub(symbol)) &#123;</span><br><span class="line">                <span class="keyword">while</span> (!operatorStack.isEmpty() &amp;&amp; (</span><br><span class="line">                        isAdd(operatorStack.peek()) || isSub(operatorStack.peek()) || isMulti(operatorStack.peek()) || isDiv(operatorStack.peek())</span><br><span class="line">                )) &#123;</span><br><span class="line">                    calculate(numberStack, operatorStack);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 操作符入栈</span></span><br><span class="line">                operatorStack.push(symbol);</span><br><span class="line">                System.out.println(<span class="string">"操作符入栈："</span> + symbol);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 如果是乘除</span></span><br><span class="line"><span class="comment">             * 1、如果操作符栈有乘除，计算前面表达式，更新操作符栈和操作数栈</span></span><br><span class="line"><span class="comment">             * 2、把操作符入栈</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">if</span> (isMulti(symbol) || isDiv(symbol)) &#123;</span><br><span class="line">                <span class="keyword">while</span> (!operatorStack.isEmpty() &amp;&amp; (</span><br><span class="line">                        isMulti(operatorStack.peek()) || isDiv(operatorStack.peek())</span><br><span class="line">                )) &#123;</span><br><span class="line">                    calculate(numberStack, operatorStack);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 操作符入栈</span></span><br><span class="line">                operatorStack.push(symbol);</span><br><span class="line">                System.out.println(<span class="string">"操作符入栈："</span> + symbol);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 如果是左括号，则不做处理，直接入栈</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">if</span> (isLeftBracket(symbol)) &#123;</span><br><span class="line">                <span class="comment">// 操作符入栈</span></span><br><span class="line">                operatorStack.push(symbol);</span><br><span class="line">                System.out.println(<span class="string">"操作符入栈："</span> + symbol);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 如果是有括号</span></span><br><span class="line"><span class="comment">             * 操作数栈出栈，直到左括号，计算括号里面的表达式</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">if</span> (isRightBracket(symbol)) &#123;</span><br><span class="line">                <span class="keyword">while</span> (!isLeftBracket(operatorStack.peek())) &#123;</span><br><span class="line">                    calculate(numberStack, operatorStack);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 操作符出栈</span></span><br><span class="line">                String operator = operatorStack.pop();</span><br><span class="line">                System.out.println(<span class="string">"操作符出栈："</span> + operator);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 计算转换后的表达式</span></span><br><span class="line"><span class="comment">         * 因为转换后的表达式，已经把优先级高的执行完了，剩下的都是同级的，所以从右到左计算是不影响结果</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">while</span> (!operatorStack.isEmpty()) &#123;</span><br><span class="line">            calculate(numberStack, operatorStack);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> numberStack.pop().interpreter();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 格式化表达式，使运算符和括号前后加入空格</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> expression</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">formatExpression</span><span class="params">(String expression)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> expression.replaceAll(<span class="string">"([+\\-*/()])"</span>, <span class="string">" $1 "</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 计算最新录入的表达式的值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> numberStack 操作数栈</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> operatorStack 操作符栈</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">calculate</span><span class="params">(Stack&lt;Expression&gt; numberStack, Stack&lt;String&gt; operatorStack)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 计算前面表达式</span></span><br><span class="line">        Expression rightNumber = numberStack.pop();</span><br><span class="line">        Expression leftNumber = numberStack.pop();</span><br><span class="line">        String operator = operatorStack.pop();</span><br><span class="line">        <span class="comment">// 计算值入栈</span></span><br><span class="line">        numberStack.push(<span class="keyword">new</span> BinaryExpression(leftNumber, operator, rightNumber));</span><br><span class="line">        System.out.println(<span class="string">"操作数出栈："</span> + leftNumber.interpreter());</span><br><span class="line">        System.out.println(<span class="string">"操作数出栈："</span> + rightNumber.interpreter());</span><br><span class="line">        System.out.println(<span class="string">"操作符出栈："</span> + operator);</span><br><span class="line">        System.out.println(<span class="string">"操作数入栈："</span> + numberStack.peek().interpreter());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否是加法</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isAdd</span><span class="params">(String symbol)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> symbol.equals(<span class="string">"+"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否是减法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isSub</span><span class="params">(String symbol)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> symbol.equals(<span class="string">"-"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否是乘法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isMulti</span><span class="params">(String symbol)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> symbol.equals(<span class="string">"*"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否是除法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isDiv</span><span class="params">(String symbol)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> symbol.equals(<span class="string">"/"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否是左括号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> symbol</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isLeftBracket</span><span class="params">(String symbol)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> symbol.equals(<span class="string">"("</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否是右括号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> symbol</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isRightBracket</span><span class="params">(String symbol)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> symbol.equals(<span class="string">")"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否为数值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> symbol</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isNumber</span><span class="params">(String symbol)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> symbol.matches(<span class="string">"\\d+"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isOperator</span><span class="params">(<span class="keyword">char</span> symbol)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>用例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        MathExpressionContext context = <span class="keyword">new</span> MathExpressionContext();</span><br><span class="line">        String expression = <span class="string">"1-2+3-4+5*(6/2*7+(8*9))-10*11-12"</span>;</span><br><span class="line">        <span class="keyword">int</span> result = context.calculate(expression);</span><br><span class="line">        System.out.println(<span class="string">"Result: "</span> + result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line">操作数入栈：<span class="number">1</span></span><br><span class="line">操作符入栈：-</span><br><span class="line">操作数入栈：<span class="number">2</span></span><br><span class="line">操作数出栈：<span class="number">1</span></span><br><span class="line">操作数出栈：<span class="number">2</span></span><br><span class="line">操作符出栈：-</span><br><span class="line">操作数入栈：-<span class="number">1</span></span><br><span class="line">操作符入栈：+</span><br><span class="line">操作数入栈：<span class="number">3</span></span><br><span class="line">操作数出栈：-<span class="number">1</span></span><br><span class="line">操作数出栈：<span class="number">3</span></span><br><span class="line">操作符出栈：+</span><br><span class="line">操作数入栈：<span class="number">2</span></span><br><span class="line">操作符入栈：-</span><br><span class="line">操作数入栈：<span class="number">4</span></span><br><span class="line">操作数出栈：<span class="number">2</span></span><br><span class="line">操作数出栈：<span class="number">4</span></span><br><span class="line">操作符出栈：-</span><br><span class="line">操作数入栈：-<span class="number">2</span></span><br><span class="line">操作符入栈：+</span><br><span class="line">操作数入栈：<span class="number">5</span></span><br><span class="line">操作符入栈：*</span><br><span class="line">操作符入栈：(</span><br><span class="line">操作数入栈：<span class="number">6</span></span><br><span class="line">操作符入栈：/</span><br><span class="line">操作数入栈：<span class="number">2</span></span><br><span class="line">操作数出栈：<span class="number">6</span></span><br><span class="line">操作数出栈：<span class="number">2</span></span><br><span class="line">操作符出栈：/</span><br><span class="line">操作数入栈：<span class="number">3</span></span><br><span class="line">操作符入栈：*</span><br><span class="line">操作数入栈：<span class="number">7</span></span><br><span class="line">操作数出栈：<span class="number">3</span></span><br><span class="line">操作数出栈：<span class="number">7</span></span><br><span class="line">操作符出栈：*</span><br><span class="line">操作数入栈：<span class="number">21</span></span><br><span class="line">操作符入栈：+</span><br><span class="line">操作符入栈：(</span><br><span class="line">操作数入栈：<span class="number">8</span></span><br><span class="line">操作符入栈：*</span><br><span class="line">操作数入栈：<span class="number">9</span></span><br><span class="line">操作数出栈：<span class="number">8</span></span><br><span class="line">操作数出栈：<span class="number">9</span></span><br><span class="line">操作符出栈：*</span><br><span class="line">操作数入栈：<span class="number">72</span></span><br><span class="line">操作符出栈：(</span><br><span class="line">操作数出栈：<span class="number">21</span></span><br><span class="line">操作数出栈：<span class="number">72</span></span><br><span class="line">操作符出栈：+</span><br><span class="line">操作数入栈：<span class="number">93</span></span><br><span class="line">操作符出栈：(</span><br><span class="line">操作数出栈：<span class="number">5</span></span><br><span class="line">操作数出栈：<span class="number">93</span></span><br><span class="line">操作符出栈：*</span><br><span class="line">操作数入栈：<span class="number">465</span></span><br><span class="line">操作数出栈：-<span class="number">2</span></span><br><span class="line">操作数出栈：<span class="number">465</span></span><br><span class="line">操作符出栈：+</span><br><span class="line">操作数入栈：<span class="number">463</span></span><br><span class="line">操作符入栈：-</span><br><span class="line">操作数入栈：<span class="number">10</span></span><br><span class="line">操作符入栈：*</span><br><span class="line">操作数入栈：<span class="number">11</span></span><br><span class="line">操作数出栈：<span class="number">10</span></span><br><span class="line">操作数出栈：<span class="number">11</span></span><br><span class="line">操作符出栈：*</span><br><span class="line">操作数入栈：<span class="number">110</span></span><br><span class="line">操作数出栈：<span class="number">463</span></span><br><span class="line">操作数出栈：<span class="number">110</span></span><br><span class="line">操作符出栈：-</span><br><span class="line">操作数入栈：<span class="number">353</span></span><br><span class="line">操作符入栈：-</span><br><span class="line">操作数入栈：<span class="number">12</span></span><br><span class="line">操作数出栈：<span class="number">353</span></span><br><span class="line">操作数出栈：<span class="number">12</span></span><br><span class="line">操作符出栈：-</span><br><span class="line">操作数入栈：<span class="number">341</span></span><br><span class="line">输出结果: <span class="number">341</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;设计模式-解释器模式&quot;&gt;&lt;a href=&quot;#设计模式-解释器模式&quot; class=&quot;headerlink&quot; title=&quot;设计模式-解释器模式&quot;&gt;&lt;/a&gt;设计模式-解释器模式&lt;/h1&gt;&lt;h2 id=&quot;一、详解&quot;&gt;&lt;a href=&quot;#一、详解&quot; class=&quot;head
      
    
    </summary>
    
    
      <category term="设计模式" scheme="https://www.deschen.cn/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="解释器模式" scheme="https://www.deschen.cn/tags/%E8%A7%A3%E9%87%8A%E5%99%A8%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-状态模式</title>
    <link href="https://www.deschen.cn/2022/02/14/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F/"/>
    <id>https://www.deschen.cn/2022/02/14/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F/</id>
    <published>2022-02-14T13:23:24.000Z</published>
    <updated>2023-05-18T08:35:42.432Z</updated>
    
    <content type="html"><![CDATA[<h1 id="设计模式-状态模式"><a href="#设计模式-状态模式" class="headerlink" title="设计模式-状态模式"></a>设计模式-状态模式</h1><h2 id="一、详解"><a href="#一、详解" class="headerlink" title="一、详解"></a>一、详解</h2><ul><li>概念：定义提供<strong>行为</strong>的<strong>状态接口</strong>，对象根据<strong>内部状态不同</strong>，<strong>改变其执行行为</strong></li><li>主要用途：<ul><li>对象多个状态且不同状态之间转换，执行不同的行为</li><li>避免大量条件判断</li></ul></li><li>代码：状态接口、封装行为的状态、包含状态的对象</li></ul><h2 id="二、代码"><a href="#二、代码" class="headerlink" title="二、代码"></a>二、代码</h2><ul><li><p>订单状态转换为例：待支付 -&gt; 已支付 -&gt; 待发货 -&gt; 已发货 -&gt; 已完成</p></li><li><p>状态接口：订单状态接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderState</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行对应状态的行为</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">execute</span><span class="params">(Order order)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>具体行为的状态</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 待支付</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PendingPayState</span> <span class="keyword">implements</span> <span class="title">OrderState</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(Order order)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"执行待支付逻辑"</span>);</span><br><span class="line">        System.out.println(<span class="string">"更新订单状态为：已支付"</span>);</span><br><span class="line">        order.setState(<span class="keyword">new</span> PaidState());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 已支付</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PaidState</span> <span class="keyword">implements</span> <span class="title">OrderState</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(Order order)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"执行已支付逻辑"</span>);</span><br><span class="line">        System.out.println(<span class="string">"更新订单状态：待发货"</span>);</span><br><span class="line">        order.setState(<span class="keyword">new</span> PendingShipState());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 待发货</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PendingShipState</span> <span class="keyword">implements</span> <span class="title">OrderState</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(Order order)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"执行待发货逻辑"</span>);</span><br><span class="line">        System.out.println(<span class="string">"更新订单状态：已发货"</span>);</span><br><span class="line">        order.setState(<span class="keyword">new</span> ShippedState());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 已发货</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShippedState</span> <span class="keyword">implements</span> <span class="title">OrderState</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(Order order)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"执行已发货逻辑"</span>);</span><br><span class="line">        System.out.println(<span class="string">"更新订单状态：已完成"</span>);</span><br><span class="line">        order.setState(<span class="keyword">new</span> CompleteState());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 已完成</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CompleteState</span> <span class="keyword">implements</span> <span class="title">OrderState</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(Order order)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"执行已完成逻辑"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>包含状态的对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Order</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long orderId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> OrderState state;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Order</span><span class="params">(Long orderId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.orderId = orderId;</span><br><span class="line">        <span class="keyword">this</span>.state = <span class="keyword">new</span> PendingPayState();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">process</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        state.execute(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setState</span><span class="params">(OrderState state)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.state = state;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>用例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Order order = <span class="keyword">new</span> Order(<span class="number">1L</span>);</span><br><span class="line"></span><br><span class="line">        order.process();</span><br><span class="line">        order.process();</span><br><span class="line">        order.process();</span><br><span class="line">        order.process();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line">执行待支付逻辑</span><br><span class="line">更新订单状态为：已支付</span><br><span class="line">执行已支付逻辑</span><br><span class="line">更新订单状态：待发货</span><br><span class="line">执行待发货逻辑</span><br><span class="line">更新订单状态：已发货</span><br><span class="line">执行已发货逻辑</span><br><span class="line">更新订单状态：已完成</span><br><span class="line">执行已完成逻辑</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;设计模式-状态模式&quot;&gt;&lt;a href=&quot;#设计模式-状态模式&quot; class=&quot;headerlink&quot; title=&quot;设计模式-状态模式&quot;&gt;&lt;/a&gt;设计模式-状态模式&lt;/h1&gt;&lt;h2 id=&quot;一、详解&quot;&gt;&lt;a href=&quot;#一、详解&quot; class=&quot;headerli
      
    
    </summary>
    
    
      <category term="设计模式" scheme="https://www.deschen.cn/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="状态模式" scheme="https://www.deschen.cn/tags/%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-命令模式</title>
    <link href="https://www.deschen.cn/2022/02/13/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/"/>
    <id>https://www.deschen.cn/2022/02/13/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/</id>
    <published>2022-02-13T14:14:21.000Z</published>
    <updated>2023-05-17T07:54:21.253Z</updated>
    
    <content type="html"><![CDATA[<h1 id="设计模式-命令模式"><a href="#设计模式-命令模式" class="headerlink" title="设计模式-命令模式"></a>设计模式-命令模式</h1><h2 id="一、详解"><a href="#一、详解" class="headerlink" title="一、详解"></a>一、详解</h2><ul><li>概念：将<strong>请求</strong>封装成<strong>命令对象</strong>，使<strong>发送者</strong>和<strong>接收者</strong>解耦，不需要了解<strong>执行细节</strong></li><li>主要用途：<ul><li>解耦请求发送者和接收者，发送者只需发送命令，这只需执行命令，不需要了解执行细节</li><li>支持请求的排队、记录、撤销和重做等操作</li><li>提供了一种可扩展的方式来组织和管理命令。方便添加和移除命令，无需改动现有代码</li></ul></li><li>代码：命令接口、具体命令、命令队列（按需）</li></ul><h2 id="二、代码"><a href="#二、代码" class="headerlink" title="二、代码"></a>二、代码</h2><ul><li><p>文件版本保存和回退为例，结合<strong>文件备忘录案例</strong></p></li><li><p>命令接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**     * 执行</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">execute</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 撤回</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">undo</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>具体命令：上传文件，同一文件标识上传，会覆盖</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UploadFileCommand</span> <span class="keyword">implements</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> FileManager fileManager;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> File file;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UploadFileCommand</span><span class="params">(FileManager fileManager, File file)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.fileManager = fileManager;</span><br><span class="line">        <span class="keyword">this</span>.file = file;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        fileManager.uploadFile(file);</span><br><span class="line">        System.out.println(<span class="string">"上次文件："</span> + file.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">undo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        FileMemento lastVersion = fileManager.rollbackPreVersion(file.getFileId());</span><br><span class="line">        file.restoreFromMemento(lastVersion);</span><br><span class="line">        System.out.println(<span class="string">"撤回上一版文件："</span> + file.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>命令队列：保存命令集合，使其顺序执行或撤回</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CommandQueue</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Command&gt; queue = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addCommand</span><span class="params">(Command command)</span> </span>&#123;</span><br><span class="line">        queue.add(command);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">executeCommands</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (Command command : queue) &#123;</span><br><span class="line">            command.execute();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">undoReverseCommands</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = queue.size() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            queue.get(i).undo();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>用例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        FileManager fileManager = <span class="keyword">new</span> FileManagerImpl();</span><br><span class="line">        CommandQueue commandQueue = <span class="keyword">new</span> CommandQueue();</span><br><span class="line"></span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="number">1L</span>, <span class="string">"test.doc"</span>, <span class="number">1024L</span>, <span class="string">"Hello World Version"</span>, <span class="string">"张三"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">long</span> i = <span class="number">1L</span>; i &lt;= <span class="number">10L</span>; i++) &#123;</span><br><span class="line">            File uploadFile = <span class="keyword">new</span> File(<span class="number">1L</span>, <span class="string">"test"</span> + i + <span class="string">".doc"</span>, <span class="number">1024L</span>, <span class="string">"Hello World Version"</span> + i, <span class="string">"张三"</span>);</span><br><span class="line">            System.out.println(<span class="string">"第"</span> + i + <span class="string">"版文件: "</span> + uploadFile.toString());</span><br><span class="line">            UploadFileCommand uploadFileCommand = <span class="keyword">new</span> UploadFileCommand(fileManager, uploadFile);</span><br><span class="line">            commandQueue.addCommand(uploadFileCommand);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"=========队列执行命令==========="</span>);</span><br><span class="line">        commandQueue.executeCommands();</span><br><span class="line">        file.restoreFromMemento(fileManager.getLastVersion(file.getFileId()));</span><br><span class="line">        System.out.println(<span class="string">"当前文件："</span> + file.toString());</span><br><span class="line"></span><br><span class="line"><span class="comment">//        测试时，二选一，因为公用一个file，会受到上一个版本影响</span></span><br><span class="line"><span class="comment">//        System.out.println("=========队列执行撤销命令===========");</span></span><br><span class="line"><span class="comment">//        commandQueue.undoReverseCommands();</span></span><br><span class="line"><span class="comment">//        file.restoreFromMemento(fileManager.getLastVersion(file.getFileId()));</span></span><br><span class="line"><span class="comment">//        System.out.println("当前文件：" + file.toString());</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line">第<span class="number">1</span>版文件: File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test1.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version1'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line">第<span class="number">2</span>版文件: File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test2.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version2'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line">第<span class="number">3</span>版文件: File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test3.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version3'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line">第<span class="number">4</span>版文件: File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test4.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version4'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line">第<span class="number">5</span>版文件: File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test5.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version5'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line">第<span class="number">6</span>版文件: File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test6.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version6'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line">第<span class="number">7</span>版文件: File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test7.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version7'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line">第<span class="number">8</span>版文件: File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test8.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version8'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line">第<span class="number">9</span>版文件: File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test9.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version9'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line">第<span class="number">10</span>版文件: File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test10.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version10'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line">=========队列执行撤销命令===========</span><br><span class="line">撤回上一版文件：File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test10.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version10'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line">撤回上一版文件：File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test9.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version9'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line">撤回上一版文件：File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test8.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version8'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line">撤回上一版文件：File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test7.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version7'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line">撤回上一版文件：File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test6.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version6'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line">撤回上一版文件：File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test5.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version5'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line">撤回上一版文件：File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test4.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version4'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line">撤回上一版文件：File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test3.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version3'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line">撤回上一版文件：File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test2.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version2'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line">撤回上一版文件：File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test1.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version1'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line">当前文件：File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line"></span><br><span class="line">=========队列执行撤销命令===========</span><br><span class="line">撤回上一版文件：File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test10.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version10'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line">撤回上一版文件：File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test9.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version9'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line">撤回上一版文件：File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test8.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version8'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line">撤回上一版文件：File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test7.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version7'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line">撤回上一版文件：File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test6.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version6'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line">撤回上一版文件：File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test5.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version5'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line">撤回上一版文件：File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test4.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version4'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line">撤回上一版文件：File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test3.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version3'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line">撤回上一版文件：File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test2.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version2'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line">撤回上一版文件：File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test1.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version1'</span>, operator=<span class="string">'张三'</span>&#125;</span><br><span class="line">当前文件：File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World Version'</span>, operator=<span class="string">'张三'</span>&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;设计模式-命令模式&quot;&gt;&lt;a href=&quot;#设计模式-命令模式&quot; class=&quot;headerlink&quot; title=&quot;设计模式-命令模式&quot;&gt;&lt;/a&gt;设计模式-命令模式&lt;/h1&gt;&lt;h2 id=&quot;一、详解&quot;&gt;&lt;a href=&quot;#一、详解&quot; class=&quot;headerli
      
    
    </summary>
    
    
      <category term="设计模式" scheme="https://www.deschen.cn/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="命令模式" scheme="https://www.deschen.cn/tags/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-备份录模式</title>
    <link href="https://www.deschen.cn/2022/02/12/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%A4%87%E4%BB%BD%E5%BD%95%E6%A8%A1%E5%BC%8F/"/>
    <id>https://www.deschen.cn/2022/02/12/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%A4%87%E4%BB%BD%E5%BD%95%E6%A8%A1%E5%BC%8F/</id>
    <published>2022-02-12T12:15:24.000Z</published>
    <updated>2023-05-17T07:54:02.557Z</updated>
    
    <content type="html"><![CDATA[<h1 id="设计模式-备份录模式"><a href="#设计模式-备份录模式" class="headerlink" title="设计模式-备份录模式"></a>设计模式-备份录模式</h1><h2 id="一、详解"><a href="#一、详解" class="headerlink" title="一、详解"></a>一、详解</h2><ul><li>概念：定义一个封装<strong>对象内部状态</strong>的<strong>备份类</strong>，通过<strong>管理者</strong> <strong>保存和恢复对象的状态</strong></li><li>主要用途：<ul><li>提供对象快照和恢复机制，不破坏对象的情况下，保存和恢复对象状态。例如：文件版本保存和撤回</li><li>支持对象的撤销和重做机制</li><li>提供对象状态的历史记录</li></ul></li><li>代码：待备份类、备份类、管理者</li></ul><h2 id="二、代码"><a href="#二、代码" class="headerlink" title="二、代码"></a>二、代码</h2><ul><li><p>文件版本保存和回退为例</p></li><li><p>带备份对象：文件类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">File</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long fileId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String fileName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> fileSize;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String content;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 操作人&lt;br/&gt;</span></span><br><span class="line"><span class="comment">     * 这里加这个字段，主要表示为什么&lt;b&gt;备份类不直接继承被备份的类&lt;/b&gt;：因为备份类主要是&lt;b&gt;备份应该备份的内容&lt;/b&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String operator;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">File</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">File</span><span class="params">(Long fileId, String fileName, <span class="keyword">long</span> fileSize, String content, String operator)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.fileId = fileId;</span><br><span class="line">        <span class="keyword">this</span>.fileName = fileName;</span><br><span class="line">        <span class="keyword">this</span>.fileSize = fileSize;</span><br><span class="line">        <span class="keyword">this</span>.content = content;</span><br><span class="line">        <span class="keyword">this</span>.operator = operator;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FileMemento <span class="title">backup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> FileMemento(fileId, fileName, fileSize, content);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">restoreFromMemento</span><span class="params">(FileMemento fileMemento)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == fileMemento) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.fileId = fileMemento.getFileId();</span><br><span class="line">        <span class="keyword">this</span>.fileName = fileMemento.getFileName();</span><br><span class="line">        <span class="keyword">this</span>.fileSize = fileMemento.getFileSize();</span><br><span class="line">        <span class="keyword">this</span>.content = fileMemento.getContent();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getFileId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> fileId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFileId</span><span class="params">(Long fileId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.fileId = fileId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFileName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> fileName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFileName</span><span class="params">(String fileName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.fileName = fileName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getFileSize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> fileSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFileSize</span><span class="params">(<span class="keyword">long</span> fileSize)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.fileSize = fileSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getContent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setContent</span><span class="params">(String content)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.content = content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"File&#123;"</span> +</span><br><span class="line">                <span class="string">"fileId="</span> + fileId +</span><br><span class="line">                <span class="string">", fileName='"</span> + fileName + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", fileSize="</span> + fileSize +</span><br><span class="line">                <span class="string">", content='"</span> + content + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", operator='"</span> + operator + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>备份类：备份文件名字、内容等，添加备份标识（属于哪个文件、备份时间）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileMemento</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long fileId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String fileName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> fileSize;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String content;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 备份时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Date timestamp;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FileMemento</span><span class="params">(Long fileId, String fileName, <span class="keyword">long</span> fileSize, String content)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.fileId = fileId;</span><br><span class="line">        <span class="keyword">this</span>.fileName = fileName;</span><br><span class="line">        <span class="keyword">this</span>.fileSize = fileSize;</span><br><span class="line">        <span class="keyword">this</span>.content = content;</span><br><span class="line">        <span class="keyword">this</span>.timestamp = <span class="keyword">new</span> Date();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getFileId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> fileId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFileId</span><span class="params">(Long fileId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.fileId = fileId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFileName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> fileName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFileName</span><span class="params">(String fileName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.fileName = fileName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getFileSize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> fileSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFileSize</span><span class="params">(<span class="keyword">long</span> fileSize)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.fileSize = fileSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getContent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setContent</span><span class="params">(String content)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.content = content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getTimestamp</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> timestamp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTimestamp</span><span class="params">(Date timestamp)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.timestamp = timestamp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"FileMemento&#123;"</span> +</span><br><span class="line">                <span class="string">", timestamp="</span> + timestamp +</span><br><span class="line">                <span class="string">"&#125; "</span> + <span class="keyword">super</span>.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>管理者：保存和恢复对象状态</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 管理者接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">FileManager</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 上传文件</span></span><br><span class="line"><span class="comment">     * 保存文件并备份</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file 文件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">uploadFile</span><span class="params">(File file)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取最新一版文件</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileId 文件标识</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">FileMemento <span class="title">getLastVersion</span><span class="params">(Long fileId)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 回滚到上一版本</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileId 文件标识</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">FileMemento <span class="title">rollbackPreVersion</span><span class="params">(Long fileId)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileManagerImpl</span> <span class="keyword">implements</span> <span class="title">FileManager</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Map&lt;Long, File&gt; FILE_STORAGE = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Map&lt;Long, List&lt;FileMemento&gt;&gt; FILE_MEMENTO_STORAGE = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">uploadFile</span><span class="params">(File file)</span> </span>&#123;</span><br><span class="line">        FILE_STORAGE.put(file.getFileId(), file);</span><br><span class="line">        List&lt;FileMemento&gt; fileMementos = FILE_MEMENTO_STORAGE.get(file.getFileId());</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == fileMementos) &#123;</span><br><span class="line">            fileMementos = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        fileMementos.add(file.backup());</span><br><span class="line">        FILE_MEMENTO_STORAGE.put(file.getFileId(), fileMementos);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FileMemento <span class="title">getLastVersion</span><span class="params">(Long fileId)</span> </span>&#123;</span><br><span class="line">        List&lt;FileMemento&gt; fileMementos = FILE_MEMENTO_STORAGE.get(fileId);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == fileMementos || fileMementos.size() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> fileMementos.get(fileMementos.size() - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FileMemento <span class="title">rollbackPreVersion</span><span class="params">(Long fileId)</span> </span>&#123;</span><br><span class="line">        List&lt;FileMemento&gt; fileMementos = FILE_MEMENTO_STORAGE.get(fileId);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == fileMementos || fileMementos.size() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        FileMemento fileMemento = fileMementos.remove(fileMementos.size() - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> fileMemento;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>用例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        FileManager fileManager = <span class="keyword">new</span> FileManagerImpl();</span><br><span class="line"></span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="number">1L</span>, <span class="string">"test.doc"</span>, <span class="number">1024L</span>, <span class="string">"Hello World"</span>, <span class="string">"张三"</span>);</span><br><span class="line">        System.out.println(<span class="string">"第一版文件: "</span> + file.toString());</span><br><span class="line">        fileManager.uploadFile(file);</span><br><span class="line">        <span class="comment">// 修改文件名</span></span><br><span class="line">        file.setContent(<span class="string">"Yes I can"</span>);</span><br><span class="line">        fileManager.uploadFile(file);</span><br><span class="line">        System.out.println(<span class="string">"第二版文件: "</span> + file.toString());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取上一版文件</span></span><br><span class="line">        FileMemento lastVersion = fileManager.getLastVersion(file.getFileId());</span><br><span class="line">        file.restoreFromMemento(lastVersion);</span><br><span class="line">        System.out.println(<span class="string">"上一版文件: "</span> + file.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line">第一版文件: File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World'</span>&#125;</span><br><span class="line">第二版文件: File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Yes I can'</span>&#125;</span><br><span class="line">上一版文件: File&#123;fileId=<span class="number">1</span>, fileName=<span class="string">'test.doc'</span>, fileSize=<span class="number">1024</span>, content=<span class="string">'Hello World'</span>&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;设计模式-备份录模式&quot;&gt;&lt;a href=&quot;#设计模式-备份录模式&quot; class=&quot;headerlink&quot; title=&quot;设计模式-备份录模式&quot;&gt;&lt;/a&gt;设计模式-备份录模式&lt;/h1&gt;&lt;h2 id=&quot;一、详解&quot;&gt;&lt;a href=&quot;#一、详解&quot; class=&quot;head
      
    
    </summary>
    
    
      <category term="设计模式" scheme="https://www.deschen.cn/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="备份录模式" scheme="https://www.deschen.cn/tags/%E5%A4%87%E4%BB%BD%E5%BD%95%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-职责链模式</title>
    <link href="https://www.deschen.cn/2022/02/11/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%81%8C%E8%B4%A3%E9%93%BE%E6%A8%A1%E5%BC%8F/"/>
    <id>https://www.deschen.cn/2022/02/11/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%81%8C%E8%B4%A3%E9%93%BE%E6%A8%A1%E5%BC%8F/</id>
    <published>2022-02-11T14:12:35.000Z</published>
    <updated>2023-11-09T12:25:00.757Z</updated>
    
    <content type="html"><![CDATA[<h1 id="设计模式-职责链模式"><a href="#设计模式-职责链模式" class="headerlink" title="设计模式-职责链模式"></a>设计模式-职责链模式</h1><h2 id="一、详解"><a href="#一、详解" class="headerlink" title="一、详解"></a>一、详解</h2><ul><li>概念：定义一个<strong>抽象处理器</strong> 和 <strong>多个具体处理器</strong>，构建<strong>链结构</strong>，将请求<strong>处理和传递</strong>给下一个处理器</li><li>主要用途：<ul><li>解耦发送者和接口者，提高代码的灵活和可维护性</li><li>根据具体场景，灵活配置处理链，无需修改已有代码</li></ul></li><li>代码：抽象类处理器、具体处理器</li></ul><h2 id="二、代码"><a href="#二、代码" class="headerlink" title="二、代码"></a>二、代码</h2><ul><li><p>文件上传服务为例：上传文件前，需要校验参数是否合理、是否有权限上传、是否存在病毒等</p></li><li><p>抽象类处理器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> FileHandler nextHandler;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加下一个文件处理器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileHandler 文件处理器</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNextHandler</span><span class="params">(FileHandler fileHandler)</span> </span>&#123;</span><br><span class="line">        nextHandler = fileHandler;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 主要逻辑</span></span><br><span class="line"><span class="comment">     * 1、处理这个处理器自身逻辑</span></span><br><span class="line"><span class="comment">     * 2、下一个处理器处理</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">handleFile</span><span class="params">(File file)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FileHandler <span class="title">getNextHandler</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> nextHandler;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>具体处理器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 处理链</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileProcessChain</span> <span class="keyword">extends</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加下一个处理器，构建成链</span></span><br><span class="line"><span class="comment">     * 不同于其他处理器，其他处理器只需添加下一个处理器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileHandler 文件处理器</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNextHandler</span><span class="params">(FileHandler fileHandler)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == nextHandler) &#123;</span><br><span class="line">            nextHandler = fileHandler;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            FileHandler currentHandler = nextHandler;</span><br><span class="line">            <span class="keyword">while</span> (<span class="keyword">null</span> != currentHandler.getNextHandler()) &#123;</span><br><span class="line">                currentHandler = nextHandler.getNextHandler();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            currentHandler.setNextHandler(fileHandler);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断下一个处理是否存在</span></span><br><span class="line"><span class="comment">     *      不存在，则跳过</span></span><br><span class="line"><span class="comment">     *      存在，则下一个处理器处理</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleFile</span><span class="params">(File file)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == nextHandler) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        nextHandler.handleFile(file);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 校验处理器</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ValidateParamFileHandler</span> <span class="keyword">extends</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleFile</span><span class="params">(File file)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"文件参数校验 file: "</span> + file.toString());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> != nextHandler) &#123;</span><br><span class="line">            nextHandler.handleFile(file);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//权限处理器</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PermissionFileHandler</span> <span class="keyword">extends</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 1、获取用户信息</span></span><br><span class="line"><span class="comment">     * 2、判断该用户是否有操作该文件夹的权限</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleFile</span><span class="params">(File file)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"当前用户是否有权限操作"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> != nextHandler) &#123;</span><br><span class="line">            nextHandler.handleFile(file);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 病毒扫描处理器</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">VirusScanFileHandler</span> <span class="keyword">extends</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleFile</span><span class="params">(File file)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"文件病毒扫描"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> != nextHandler) &#123;</span><br><span class="line">            nextHandler.handleFile(file);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>文件服务</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">FileService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 上传文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filePath 文件路径</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileName 文件名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">uploadFile</span><span class="params">(String filePath, String fileName)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileServiceImpl</span> <span class="keyword">implements</span> <span class="title">FileService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">uploadFile</span><span class="params">(String filePath, String fileName)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"文件服务：上传文件 文件路径："</span> + filePath + <span class="string">" 文件名："</span> + fileName);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>用例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File();</span><br><span class="line">        file.setFilePath(<span class="string">"/resources"</span>);</span><br><span class="line">        file.setFileName(<span class="string">"test.doc"</span>);</span><br><span class="line">        file.setFileSize(<span class="number">10000L</span>);</span><br><span class="line">        file.setContent(<span class="string">"Hello World"</span>);</span><br><span class="line"></span><br><span class="line">        FileProcessChain fileProcessChain = <span class="keyword">new</span> FileProcessChain();</span><br><span class="line">        fileProcessChain.setNextHandler(<span class="keyword">new</span> ValidateParamFileHandler());</span><br><span class="line">        fileProcessChain.setNextHandler(<span class="keyword">new</span> PermissionFileHandler());</span><br><span class="line">        fileProcessChain.setNextHandler(<span class="keyword">new</span> VirusScanFileHandler());</span><br><span class="line"></span><br><span class="line">        fileProcessChain.handleFile(file);</span><br><span class="line"></span><br><span class="line">        FileService fileService = <span class="keyword">new</span> FileServiceImpl();</span><br><span class="line">        fileService.uploadFile(file.getFilePath(), file.getFileName());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line">文件参数校验 file: File&#123;filePath=<span class="string">'/resources'</span>, fileName=<span class="string">'test.doc'</span>, fileSize=<span class="number">10000</span>, content=Hello World&#125;</span><br><span class="line">当前用户是否有权限操作</span><br><span class="line">文件病毒扫描</span><br><span class="line">文件服务：上传文件 文件路径：/resources 文件名：test.doc</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;设计模式-职责链模式&quot;&gt;&lt;a href=&quot;#设计模式-职责链模式&quot; class=&quot;headerlink&quot; title=&quot;设计模式-职责链模式&quot;&gt;&lt;/a&gt;设计模式-职责链模式&lt;/h1&gt;&lt;h2 id=&quot;一、详解&quot;&gt;&lt;a href=&quot;#一、详解&quot; class=&quot;head
      
    
    </summary>
    
    
      <category term="设计模式" scheme="https://www.deschen.cn/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="职责链模式" scheme="https://www.deschen.cn/tags/%E8%81%8C%E8%B4%A3%E9%93%BE%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-迭代器模式</title>
    <link href="https://www.deschen.cn/2022/02/10/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F/"/>
    <id>https://www.deschen.cn/2022/02/10/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F/</id>
    <published>2022-02-10T14:45:54.000Z</published>
    <updated>2023-05-16T02:15:39.365Z</updated>
    
    <content type="html"><![CDATA[<h1 id="设计模式-迭代器模式"><a href="#设计模式-迭代器模式" class="headerlink" title="设计模式-迭代器模式"></a>设计模式-迭代器模式</h1><h2 id="一、详解"><a href="#一、详解" class="headerlink" title="一、详解"></a>一、详解</h2><ul><li>概念：定义一个<strong>迭代器接口</strong>，和<strong>特定规则的对象的迭起器</strong>，根据其规则<strong>遍历对象</strong></li><li>主要用途：<ul><li>用于遍历聚合对象的场景，例如：图书馆的书籍</li><li>复杂数据结构遍历，例如：树形结构（文件树）</li></ul></li><li>优势：将对象实现和编辑逻辑分离，提供统一接口，简化对集合对象操作和管理</li><li>代码：迭代器接口、对象迭代器实现</li><li>PS：迭代器接口可以是<code>JDK</code>提供的<code>java.util.Iterator</code> 或者自定义</li></ul><h2 id="二、代码"><a href="#二、代码" class="headerlink" title="二、代码"></a>二、代码</h2><ul><li><p>文件树的遍历，两种遍历模式</p><ul><li>先序遍历文件树</li><li>根据指定文件名，向上遍历其父文件，到根文件结束</li></ul></li><li><p>迭代器：采用JDK自带的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Iterator</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">hasNext</span><span class="params">()</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function">E <span class="title">next</span><span class="params">()</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">default</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"remove"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">default</span> <span class="keyword">void</span> <span class="title">forEachRemaining</span><span class="params">(Consumer&lt;? <span class="keyword">super</span> E&gt; action)</span> </span>&#123;</span><br><span class="line">        Objects.requireNonNull(action);</span><br><span class="line">        <span class="keyword">while</span> (hasNext())</span><br><span class="line">            action.accept(next());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>文件迭代器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 先序遍历迭代器</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DeptPreorderIterator</span> <span class="keyword">implements</span> <span class="title">Iterator</span>&lt;<span class="title">Dept</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Dept&gt; depts;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Stack&lt;Iterator&lt;Dept&gt;&gt; stack;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DeptPreorderIterator</span><span class="params">(List&lt;Dept&gt; depts)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.depts = depts;</span><br><span class="line">        <span class="comment">// 初始化栈，顶级部门迭代器 入栈</span></span><br><span class="line">        Dept root = root(depts);</span><br><span class="line">        stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> != root) &#123;</span><br><span class="line">            stack.push(Collections.singletonList(root).iterator());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取顶级部门</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> depts</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Dept <span class="title">root</span><span class="params">(List&lt;Dept&gt; depts)</span> </span>&#123;</span><br><span class="line">        Dept root = <span class="keyword">null</span>;</span><br><span class="line">        Iterator&lt;Dept&gt; deptItr = depts.iterator();</span><br><span class="line">        <span class="keyword">while</span> (deptItr.hasNext()) &#123;</span><br><span class="line">            Dept dept = deptItr.next();</span><br><span class="line">            <span class="keyword">if</span> (dept.isRoot()) &#123;</span><br><span class="line">                root = dept;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断有没有下一个子节点集合迭代器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasNext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 先判断栈是否有值，如果没有，则返回false，因为没有起点迭代器</span></span><br><span class="line">        <span class="keyword">if</span> (stack.isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 判断该迭代器是否存在部门，如果没有，则迭代器出栈（证明上一个部门到底了），获取上一个栈的迭代器（上一个部门的父部门迭代器，用于遍历同级部门）</span></span><br><span class="line">            Iterator&lt;Dept&gt; currentItr = stack.peek();</span><br><span class="line">            <span class="keyword">if</span> (!currentItr.hasNext()) &#123;</span><br><span class="line">                stack.pop();</span><br><span class="line">                <span class="keyword">return</span> hasNext();</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Dept <span class="title">next</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (hasNext()) &#123;</span><br><span class="line">            Iterator&lt;Dept&gt; deptItr = stack.peek();</span><br><span class="line">            Dept dept = deptItr.next();</span><br><span class="line">            <span class="comment">// 获取该部门是否有子部门集合，有值则入栈（栈是先进后出，后进先执行，这里是为了遍历其子部门），无值证明该部门到底了</span></span><br><span class="line">            List&lt;Dept&gt; children = children(dept);</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">null</span> != children &amp;&amp; children.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                stack.push(children.iterator());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> dept;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"部门集合没有顶级部门，无法遍历"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取指定部门的子部门集合</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> parent 指定部门</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> List&lt;Dept&gt; <span class="title">children</span><span class="params">(Dept parent)</span> </span>&#123;</span><br><span class="line">        List&lt;Dept&gt; children = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        Iterator&lt;Dept&gt; deptItr = <span class="keyword">this</span>.depts.iterator();</span><br><span class="line">        <span class="keyword">while</span> (deptItr.hasNext()) &#123;</span><br><span class="line">            Dept dept = deptItr.next();</span><br><span class="line">            <span class="keyword">if</span> (parent.getId().equals(dept.getParentId())) &#123;</span><br><span class="line">                children.add(dept);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> children;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 向上遍历迭代器</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DeptUpwardIterator</span> <span class="keyword">implements</span> <span class="title">Iterator</span>&lt;<span class="title">Dept</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Dept&gt; depts;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Dept current;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DeptUpwardIterator</span><span class="params">(List&lt;Dept&gt; depts, Dept current)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.depts = depts;</span><br><span class="line">        <span class="keyword">this</span>.current = current;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasNext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == depts || depts.size() == <span class="number">0</span> || current.isRoot()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Iterator&lt;Dept&gt; iterator = depts.iterator();</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">            Dept dept = iterator.next();</span><br><span class="line">            <span class="keyword">if</span> (dept.getId().equals(current.getParentId())) &#123;</span><br><span class="line">                current = dept;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Dept <span class="title">next</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> current;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>用例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        List&lt;Dept&gt; depts = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        Dept root = <span class="keyword">new</span> Dept(<span class="number">0L</span>, <span class="string">"0"</span>, -<span class="number">1L</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        depts.add(root);</span><br><span class="line">        Long id = <span class="number">0L</span>;</span><br><span class="line">        <span class="keyword">for</span> (Long i = <span class="number">0L</span>; i &lt;= <span class="number">3L</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (Long j = <span class="number">0L</span>; j &lt; <span class="number">3L</span>; j++) &#123;</span><br><span class="line">                id++;</span><br><span class="line">                Integer level = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (i != <span class="number">0L</span>) &#123;</span><br><span class="line">                    level = <span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                Dept child = <span class="keyword">new</span> Dept(id, id.toString(), i, j.intValue(), level);</span><br><span class="line">                depts.add(child);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"先序遍历"</span>);</span><br><span class="line">        Iterator iterator = <span class="keyword">new</span> DeptPreorderIterator(depts);</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">            System.out.println(iterator.next());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"向上遍历"</span>);</span><br><span class="line">        Dept special = depts.get(<span class="number">10</span>);</span><br><span class="line">        iterator = <span class="keyword">new</span> DeptUpwardIterator(depts, special);</span><br><span class="line">        System.out.println(special);</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">            System.out.println(iterator.next());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line">先序遍历</span><br><span class="line">Dept&#123;id=<span class="number">0</span>, name=<span class="string">'0'</span>, parentId=-<span class="number">1</span>, sort=<span class="number">0</span>, level=<span class="number">0</span>&#125;</span><br><span class="line">Dept&#123;id=<span class="number">1</span>, name=<span class="string">'1'</span>, parentId=<span class="number">0</span>, sort=<span class="number">0</span>, level=<span class="number">1</span>&#125;</span><br><span class="line">Dept&#123;id=<span class="number">4</span>, name=<span class="string">'4'</span>, parentId=<span class="number">1</span>, sort=<span class="number">0</span>, level=<span class="number">2</span>&#125;</span><br><span class="line">Dept&#123;id=<span class="number">5</span>, name=<span class="string">'5'</span>, parentId=<span class="number">1</span>, sort=<span class="number">1</span>, level=<span class="number">2</span>&#125;</span><br><span class="line">Dept&#123;id=<span class="number">6</span>, name=<span class="string">'6'</span>, parentId=<span class="number">1</span>, sort=<span class="number">2</span>, level=<span class="number">2</span>&#125;</span><br><span class="line">Dept&#123;id=<span class="number">2</span>, name=<span class="string">'2'</span>, parentId=<span class="number">0</span>, sort=<span class="number">1</span>, level=<span class="number">1</span>&#125;</span><br><span class="line">Dept&#123;id=<span class="number">7</span>, name=<span class="string">'7'</span>, parentId=<span class="number">2</span>, sort=<span class="number">0</span>, level=<span class="number">2</span>&#125;</span><br><span class="line">Dept&#123;id=<span class="number">8</span>, name=<span class="string">'8'</span>, parentId=<span class="number">2</span>, sort=<span class="number">1</span>, level=<span class="number">2</span>&#125;</span><br><span class="line">Dept&#123;id=<span class="number">9</span>, name=<span class="string">'9'</span>, parentId=<span class="number">2</span>, sort=<span class="number">2</span>, level=<span class="number">2</span>&#125;</span><br><span class="line">Dept&#123;id=<span class="number">3</span>, name=<span class="string">'3'</span>, parentId=<span class="number">0</span>, sort=<span class="number">2</span>, level=<span class="number">1</span>&#125;</span><br><span class="line">Dept&#123;id=<span class="number">10</span>, name=<span class="string">'10'</span>, parentId=<span class="number">3</span>, sort=<span class="number">0</span>, level=<span class="number">2</span>&#125;</span><br><span class="line">Dept&#123;id=<span class="number">11</span>, name=<span class="string">'11'</span>, parentId=<span class="number">3</span>, sort=<span class="number">1</span>, level=<span class="number">2</span>&#125;</span><br><span class="line">Dept&#123;id=<span class="number">12</span>, name=<span class="string">'12'</span>, parentId=<span class="number">3</span>, sort=<span class="number">2</span>, level=<span class="number">2</span>&#125;</span><br><span class="line">向上遍历</span><br><span class="line">Dept&#123;id=<span class="number">10</span>, name=<span class="string">'10'</span>, parentId=<span class="number">3</span>, sort=<span class="number">0</span>, level=<span class="number">2</span>&#125;</span><br><span class="line">Dept&#123;id=<span class="number">3</span>, name=<span class="string">'3'</span>, parentId=<span class="number">0</span>, sort=<span class="number">2</span>, level=<span class="number">1</span>&#125;</span><br><span class="line">Dept&#123;id=<span class="number">0</span>, name=<span class="string">'0'</span>, parentId=-<span class="number">1</span>, sort=<span class="number">0</span>, level=<span class="number">0</span>&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;设计模式-迭代器模式&quot;&gt;&lt;a href=&quot;#设计模式-迭代器模式&quot; class=&quot;headerlink&quot; title=&quot;设计模式-迭代器模式&quot;&gt;&lt;/a&gt;设计模式-迭代器模式&lt;/h1&gt;&lt;h2 id=&quot;一、详解&quot;&gt;&lt;a href=&quot;#一、详解&quot; class=&quot;head
      
    
    </summary>
    
    
      <category term="设计模式" scheme="https://www.deschen.cn/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="迭代器模式" scheme="https://www.deschen.cn/tags/%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-观察者模式</title>
    <link href="https://www.deschen.cn/2022/02/09/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/"/>
    <id>https://www.deschen.cn/2022/02/09/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/</id>
    <published>2022-02-09T13:11:12.000Z</published>
    <updated>2023-05-12T09:00:33.903Z</updated>
    
    <content type="html"><![CDATA[<h1 id="设计模式-观察者模式"><a href="#设计模式-观察者模式" class="headerlink" title="设计模式-观察者模式"></a>设计模式-观察者模式</h1><h2 id="一、详解"><a href="#一、详解" class="headerlink" title="一、详解"></a>一、详解</h2><ul><li>概念：定义一个<strong>主题</strong>和<strong>一组观察者</strong>，将观察者注入主题中，主题状态改变<strong>通知</strong>观察者对象</li><li>主要用途：<ul><li>用于多个对象之间的消息传递场景</li><li>观察对象状态变化场景</li></ul></li><li>代码：主题类、观察者接口、具体观察者</li><li>PS：在Web项目中，观察者模式主要被<strong>消息中间件替代</strong>，因为观察者模式无法物理上解耦</li></ul><h2 id="二、代码"><a href="#二、代码" class="headerlink" title="二、代码"></a>二、代码</h2><ul><li><p>文件服务：文件上传、下载时，索引服务要新增、删除索引，并通知相关人员</p><ul><li>主题：文件服务</li><li>观察者：索引服务、通知服务</li></ul></li><li><p>主题</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">FileSubject</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加观察者</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> observer 观察者</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">attach</span><span class="params">(FileObserver observer)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 移除观察者</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> observer 观察者</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">detach</span><span class="params">(FileObserver observer)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 上传文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filePath 文件路径</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileName 文件名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">uploadFile</span><span class="params">(String filePath, String fileName)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filePath 文件路径</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileName 文件名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteFile</span><span class="params">(String filePath, String fileName)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileSubjectImpl</span> <span class="keyword">implements</span> <span class="title">FileSubject</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;FileObserver&gt; observers = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">attach</span><span class="params">(FileObserver observer)</span> </span>&#123;</span><br><span class="line">        observers.add(observer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">detach</span><span class="params">(FileObserver observer)</span> </span>&#123;</span><br><span class="line">        observers.remove(observer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">uploadFile</span><span class="params">(String filePath, String fileName)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"文件服务：上传文件 文件路径："</span> + filePath + <span class="string">" 文件名："</span> + fileName);</span><br><span class="line"></span><br><span class="line">        FileOperation operation = <span class="keyword">new</span> FileOperation();</span><br><span class="line">        operation.setAction(FileOperation.Action.UPLOAD);</span><br><span class="line">        operation.setFilePath(filePath);</span><br><span class="line">        operation.setFileName(fileName);</span><br><span class="line">        notifyObservers(operation);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteFile</span><span class="params">(String filePath, String fileName)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"文件服务：删除文件 文件路径："</span> + filePath + <span class="string">" 文件名："</span> + fileName);</span><br><span class="line"></span><br><span class="line">        FileOperation operation = <span class="keyword">new</span> FileOperation();</span><br><span class="line">        operation.setAction(FileOperation.Action.DELETE);</span><br><span class="line">        operation.setFilePath(filePath);</span><br><span class="line">        operation.setFileName(fileName);</span><br><span class="line">        notifyObservers(operation);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通知观察者</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> operation</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">notifyObservers</span><span class="params">(FileOperation operation)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"通知各个文件观察者"</span>);</span><br><span class="line">        <span class="keyword">for</span> (FileObserver observer : observers) &#123;</span><br><span class="line">            observer.notify(operation);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>观察者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 观察者接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">FileObserver</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通知观察者</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> operation</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">notify</span><span class="params">(FileOperation operation)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileOperation</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Action action;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String filePath;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String fileName;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Action <span class="title">getAction</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> action;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAction</span><span class="params">(Action action)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.action = action;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFilePath</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> filePath;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFilePath</span><span class="params">(String filePath)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.filePath = filePath;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFileName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> fileName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFileName</span><span class="params">(String fileName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.fileName = fileName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"FileOperation&#123;"</span> +</span><br><span class="line">                <span class="string">"action="</span> + action +</span><br><span class="line">                <span class="string">", filePath='"</span> + filePath + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", fileName='"</span> + fileName + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">enum</span> Action &#123;</span><br><span class="line"></span><br><span class="line">        UPLOAD,</span><br><span class="line"></span><br><span class="line">        DELETE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 索引观察者</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileSearchObserver</span> <span class="keyword">implements</span> <span class="title">FileObserver</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">notify</span><span class="params">(FileOperation operation)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (operation.getAction()) &#123;</span><br><span class="line">            <span class="keyword">case</span> UPLOAD:</span><br><span class="line">                addIndex(operation);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> DELETE:</span><br><span class="line">                removeIndex(operation);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addIndex</span><span class="params">(FileOperation operation)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"文件索引服务： 新增索引 operation: "</span> + operation.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">removeIndex</span><span class="params">(FileOperation operation)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"文件索引服务： 删除索引 operation: "</span> + operation.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通知观察者</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileNotifyObserver</span> <span class="keyword">implements</span> <span class="title">FileObserver</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">notify</span><span class="params">(FileOperation operation)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (operation.getAction()) &#123;</span><br><span class="line">            <span class="keyword">case</span> UPLOAD:</span><br><span class="line">                System.out.println(<span class="string">"通知服务： 文件路径："</span> + operation.getFilePath() + <span class="string">"新增文件："</span> + operation.getFileName());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> DELETE:</span><br><span class="line">                System.out.println(<span class="string">"通知服务： 文件路径："</span> + operation.getFilePath() + <span class="string">"删除文件："</span> + operation.getFileName());</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>用例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        FileObserver searchObserver = <span class="keyword">new</span> FileSearchObserver();</span><br><span class="line">        FileObserver notifyObserver = <span class="keyword">new</span> FileNotifyObserver();</span><br><span class="line"></span><br><span class="line">        FileSubjectImpl fileSubject = <span class="keyword">new</span> FileSubjectImpl();</span><br><span class="line">        fileSubject.attach(searchObserver);</span><br><span class="line">        fileSubject.attach(notifyObserver);</span><br><span class="line"></span><br><span class="line">        fileSubject.uploadFile(<span class="string">"/resource"</span>, <span class="string">"test.doc"</span>);</span><br><span class="line">        fileSubject.deleteFile(<span class="string">"/resource"</span>, <span class="string">"test01.doc"</span>);</span><br><span class="line"></span><br><span class="line">        fileSubject.detach(notifyObserver);</span><br><span class="line">        fileSubject.uploadFile(<span class="string">"/resource"</span>, <span class="string">"test02.doc"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line">文件服务：上传文件 文件路径：/resource 文件名：test.doc</span><br><span class="line">通知各个文件观察者</span><br><span class="line">文件索引服务： 新增索引 operation: FileOperation&#123;action=UPLOAD, filePath=<span class="string">'/resource'</span>, fileName=<span class="string">'test.doc'</span>&#125;</span><br><span class="line">通知服务： 文件路径：/resource新增文件：test.doc</span><br><span class="line">文件服务：删除文件 文件路径：/resource 文件名：test01.doc</span><br><span class="line">通知各个文件观察者</span><br><span class="line">文件索引服务： 删除索引 operation: FileOperation&#123;action=DELETE, filePath=<span class="string">'/resource'</span>, fileName=<span class="string">'test01.doc'</span>&#125;</span><br><span class="line">通知服务： 文件路径：/resource删除文件：test01.doc</span><br><span class="line">文件服务：上传文件 文件路径：/resource 文件名：test02.doc</span><br><span class="line">通知各个文件观察者</span><br><span class="line">文件索引服务： 新增索引 operation: FileOperation&#123;action=UPLOAD, filePath=<span class="string">'/resource'</span>, fileName=<span class="string">'test02.doc'</span>&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;设计模式-观察者模式&quot;&gt;&lt;a href=&quot;#设计模式-观察者模式&quot; class=&quot;headerlink&quot; title=&quot;设计模式-观察者模式&quot;&gt;&lt;/a&gt;设计模式-观察者模式&lt;/h1&gt;&lt;h2 id=&quot;一、详解&quot;&gt;&lt;a href=&quot;#一、详解&quot; class=&quot;head
      
    
    </summary>
    
    
      <category term="设计模式" scheme="https://www.deschen.cn/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="观察者模式" scheme="https://www.deschen.cn/tags/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-模板模式</title>
    <link href="https://www.deschen.cn/2022/02/08/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E6%A8%A1%E6%9D%BF%E6%A8%A1%E5%BC%8F/"/>
    <id>https://www.deschen.cn/2022/02/08/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E6%A8%A1%E6%9D%BF%E6%A8%A1%E5%BC%8F/</id>
    <published>2022-02-08T15:41:32.000Z</published>
    <updated>2023-05-12T08:33:23.829Z</updated>
    
    <content type="html"><![CDATA[<h1 id="设计模式-模板模式"><a href="#设计模式-模板模式" class="headerlink" title="设计模式-模板模式"></a>设计模式-模板模式</h1><h2 id="一、详解"><a href="#一、详解" class="headerlink" title="一、详解"></a>一、详解</h2><ul><li>概念：定义一个<strong>模板</strong>来<strong>固定</strong>算法或行为的<strong>流程</strong>，<strong>其中一些子步骤</strong>由<strong>子类</strong>实现</li><li>主要用途：希望不改变整体结构的基础上，通过子类来扩展或者修改某些步骤</li><li>代码：模板抽象类，具体实现类</li></ul><h2 id="二、代码"><a href="#二、代码" class="headerlink" title="二、代码"></a>二、代码</h2><ul><li><p>已发送验证码为例，验证码的流程基本是固定的</p><ul><li>发送验证码流程<ul><li>生成验证码</li><li>保存验证码</li><li>发送验证码</li></ul></li><li>校验验证码流程<ul><li>获取验证码</li><li>校验验证码（是否存在，是否相等）</li></ul></li></ul></li><li><p>基础类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证码状态码</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> CodeStatus &#123;</span><br><span class="line"></span><br><span class="line">    EQUAL,</span><br><span class="line"></span><br><span class="line">    NON_EQUAL,</span><br><span class="line"></span><br><span class="line">    NON_EXISTENT;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存功能</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Cache</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">set</span><span class="params">(String key, Object value)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Object <span class="title">get</span><span class="params">(String key)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">remove</span><span class="params">(String uniqueKey)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Cache</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">set</span><span class="params">(String key, Object value)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Object <span class="title">get</span><span class="params">(String key)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">remove</span><span class="params">(String uniqueKey)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LocalCache</span> <span class="keyword">implements</span> <span class="title">Cache</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Map&lt;String, Object&gt; cacheMap = <span class="keyword">new</span> ConcurrentHashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set</span><span class="params">(String key, Object value)</span> </span>&#123;</span><br><span class="line">        cacheMap.put(key, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">get</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> cacheMap.get(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">(String uniqueKey)</span> </span>&#123;</span><br><span class="line">        cacheMap.remove(uniqueKey);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>模板抽象类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证码模板</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">CodeProcessor</span>&lt;<span class="title">T</span> <span class="keyword">extends</span> <span class="title">Code</span>, <span class="title">P</span> <span class="keyword">extends</span> <span class="title">CodeParameter</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> Cache cache;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CodeProcessor</span><span class="params">(Cache cache)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.cache = cache;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    /**</span></span><br><span class="line"><span class="comment">//     * 发送验证码</span></span><br><span class="line"><span class="comment">//     * @param param 生成验证码参数</span></span><br><span class="line"><span class="comment">//     */</span></span><br><span class="line"><span class="comment">//    public void sendCode(P param) &#123;</span></span><br><span class="line"><span class="comment">//        T code = generateCode(param);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        cacheCode(param, code);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        sendCode(param, code);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送验证码-测试&lt;br/&gt;</span></span><br><span class="line"><span class="comment">     * 主要用于测试</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> param 生成验证码参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sendCode</span><span class="params">(P param)</span> </span>&#123;</span><br><span class="line">        T code = generateCode(param);</span><br><span class="line"></span><br><span class="line">        cacheCode(param, code);</span><br><span class="line"></span><br><span class="line">        sendCode(param, code);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> code.getCode();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 校验验证码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> param 带校验的验证码参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CodeStatus <span class="title">validateCode</span><span class="params">(P param)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 判断参数是否符合要求</span></span><br><span class="line">        <span class="keyword">if</span> (isBlank(param.getCode()) || isBlank(param.getUniqueKey())) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"参数不合规范，属性code | uniqueKey不能为空"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取验证码</span></span><br><span class="line">        CodeParameter cacheCode = getCacheCode(param);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断缓存验证码是否存在</span></span><br><span class="line">        <span class="keyword">if</span> (isBlank(cacheCode.getCode())) &#123;</span><br><span class="line">            <span class="keyword">return</span> CodeStatus.NON_EXISTENT;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断缓存验证码是否与输入的验证码相等</span></span><br><span class="line">        <span class="keyword">if</span> (cacheCode.getCode().equals(param.getCode())) &#123;</span><br><span class="line">            cache.remove(cacheCode.getUniqueKey());</span><br><span class="line">            <span class="keyword">return</span> CodeStatus.EQUAL;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> CodeStatus.NON_EQUAL;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 验证码生成</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> param</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> T <span class="title">generateCode</span><span class="params">(P param)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成验证码唯一标识，做为缓存key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> param</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> String <span class="title">generateUniqueKey</span><span class="params">(P param)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> param.getUniqueKey();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存验证码&lt;br/&gt;</span></span><br><span class="line"><span class="comment">     * 如果覆盖该方法，也要同时覆盖&#123;<span class="doctag">@link</span> CodeProcessor#getCacheCode(cn.deschen.designPattern.template.validate.CodeParameter)&#125;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> param</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">cacheCode</span><span class="params">(P param, T code)</span> </span>&#123;</span><br><span class="line">        cache.set(generateUniqueKey(param), code.getCode());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取保存的验证码&lt;br/&gt;</span></span><br><span class="line"><span class="comment">     * 如果覆盖改方法，也要同时覆盖&#123;<span class="doctag">@link</span> CodeProcessor#cacheCode(cn.deschen.designPattern.template.validate.CodeParameter, cn.deschen.designPattern.template.validate.Code)&#125;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> param</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> CodeParameter <span class="title">getCacheCode</span><span class="params">(P param)</span> </span>&#123;</span><br><span class="line">        String uniqueKey = generateUniqueKey(param);</span><br><span class="line"></span><br><span class="line">        String cacheCode = (String) cache.get(uniqueKey);</span><br><span class="line"></span><br><span class="line">        CodeParameter codeParameter = <span class="keyword">new</span> CodeParameter(uniqueKey)&#123;&#125;;</span><br><span class="line">        codeParameter.setCode(cacheCode);</span><br><span class="line">        <span class="keyword">return</span> codeParameter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送验证码</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> param</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">sendCode</span><span class="params">(P param, T code)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 参数是否为空</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 字符串参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">isBlank</span><span class="params">(String value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span> == value || value.trim().length() == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证码抽象类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Code</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> String code;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Code</span><span class="params">(String code)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证码入参抽象类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">CodeParameter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> String uniqueKey;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> String length;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> String code;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CodeParameter</span><span class="params">(String uniqueKey)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.uniqueKey = uniqueKey;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUniqueKey</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> uniqueKey;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUniqueKey</span><span class="params">(String uniqueKey)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.uniqueKey = uniqueKey;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getLength</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> length;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLength</span><span class="params">(String length)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.length = length;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCode</span><span class="params">(String code)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>图片验证码实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 实现模板方法中：生成验证码和发送验证码步骤</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ImageCodeProcessor</span> <span class="keyword">extends</span> <span class="title">CodeProcessor</span>&lt;<span class="title">ImageCode</span>, <span class="title">ImageCodeParameter</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ImageCodeProcessor</span><span class="params">(Cache cache)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(cache);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> ImageCode <span class="title">generateCode</span><span class="params">(ImageCodeParameter param)</span> </span>&#123;</span><br><span class="line">        String height = !isBlank(param.getHeight()) ? param.getHeight() : <span class="string">"100"</span>;</span><br><span class="line">        String width = !isBlank(param.getWidth()) ? param.getWidth() : <span class="string">"200"</span>;</span><br><span class="line">        String length = !isBlank(param.getLength()) ? param.getLength() : <span class="string">"6"</span>;</span><br><span class="line"></span><br><span class="line">        DefaultKaptcha defaultKaptcha = defaultKaptcha(height, width, length);</span><br><span class="line">        String code = defaultKaptcha.createText();</span><br><span class="line">        BufferedImage image = defaultKaptcha.createImage(code);</span><br><span class="line"></span><br><span class="line">        ImageCode imageCode = <span class="keyword">new</span> ImageCode(code, image);</span><br><span class="line">        <span class="keyword">return</span> imageCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">sendCode</span><span class="params">(ImageCodeParameter param, ImageCode code)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ImageIO.write(code.getImage(), <span class="string">"JPEG"</span>, param.getOutputStream());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"发送验证码失败, 异常信息："</span> + e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"生成图片验证码，code："</span> + code.getCode());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成用于验证码图片</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> height 图片高度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> width 图片宽度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> length 图片长度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> DefaultKaptcha <span class="title">defaultKaptcha</span><span class="params">(String height, String width, String length)</span> </span>&#123;</span><br><span class="line">        DefaultKaptcha defaultKaptcha = <span class="keyword">new</span> DefaultKaptcha();</span><br><span class="line">        Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">        <span class="comment">// 图片宽</span></span><br><span class="line">        properties.setProperty(<span class="string">"kaptcha.image.width"</span>, width);</span><br><span class="line">        <span class="comment">// 图片高</span></span><br><span class="line">        properties.setProperty(<span class="string">"kaptcha.image.height"</span>, height);</span><br><span class="line">        <span class="comment">// 验证码长度</span></span><br><span class="line">        properties.setProperty(<span class="string">"kaptcha.textproducer.char.length"</span>, length);</span><br><span class="line">        Config config = <span class="keyword">new</span> Config(properties);</span><br><span class="line">        defaultKaptcha.setConfig(config);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> defaultKaptcha;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 图片验证码实体类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ImageCode</span> <span class="keyword">extends</span> <span class="title">Code</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> BufferedImage image;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ImageCode</span><span class="params">(String code, BufferedImage image)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(code);</span><br><span class="line">        <span class="keyword">this</span>.image = image;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BufferedImage <span class="title">getImage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> image;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 图片验证码参数</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ImageCodeParameter</span> <span class="keyword">extends</span> <span class="title">CodeParameter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String height;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String width;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> OutputStream outputStream;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ImageCodeParameter</span><span class="params">(String uniqueKey)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(uniqueKey);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getHeight</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> height;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHeight</span><span class="params">(String height)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.height = height;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getWidth</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> width;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setWidth</span><span class="params">(String width)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.width = width;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> OutputStream <span class="title">getOutputStream</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> outputStream;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOutputStream</span><span class="params">(OutputStream outputStream)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.outputStream = outputStream;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>短信验证码实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 实现模板方法中：生成验证码和发送验证码步骤</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SmsCodeProcessor</span> <span class="keyword">extends</span> <span class="title">CodeProcessor</span>&lt;<span class="title">SmsCode</span>, <span class="title">SmsCodeParameter</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SmsCodeProcessor</span><span class="params">(Cache cache)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(cache);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> SmsCode <span class="title">generateCode</span><span class="params">(SmsCodeParameter param)</span> </span>&#123;</span><br><span class="line">        Integer length = !isBlank(param.getLength()) ? <span class="number">6</span> : Integer.valueOf(param.getLength());</span><br><span class="line">        <span class="comment">// 范围 10的(length-1)次方到9*10的(length-1)次方</span></span><br><span class="line">        Double dCode = (Math.random() * <span class="number">9</span> + <span class="number">1</span>) * Math.pow(<span class="number">10</span>, length - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SmsCode(String.valueOf(dCode.intValue()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">sendCode</span><span class="params">(SmsCodeParameter param, SmsCode code)</span> </span>&#123;</span><br><span class="line">        StringBuilder builder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        String log = builder.append(<span class="string">"生成短信验证码，发送方："</span>).append(param.getSender())</span><br><span class="line">                .append(<span class="string">"\t发送验证码："</span>).append(code.getCode())</span><br><span class="line">                .append(<span class="string">"\t给接收方："</span>).append(param.getReceiver()).toString();</span><br><span class="line">        System.out.println(log);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>用例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> FileNotFoundException </span>&#123;</span><br><span class="line">        <span class="comment">// 缓存服务</span></span><br><span class="line">        Cache cache = <span class="keyword">new</span> LocalCache();</span><br><span class="line"></span><br><span class="line">        imageCode(cache);</span><br><span class="line"></span><br><span class="line">        smsCode(cache);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">smsCode</span><span class="params">(Cache cache)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 发送短信验证码</span></span><br><span class="line">        String smsUniqueKey = <span class="string">"smsKey"</span>;</span><br><span class="line">        SmsCodeParameter smsParam = <span class="keyword">new</span> SmsCodeParameter(smsUniqueKey);</span><br><span class="line">        smsParam.setSender(<span class="string">"15113011111"</span>);</span><br><span class="line">        smsParam.setReceiver(<span class="string">"15113022222"</span>);</span><br><span class="line">        smsParam.setLength(<span class="string">"5"</span>);</span><br><span class="line">        CodeProcessor codeProcessor = <span class="keyword">new</span> SmsCodeProcessor(cache);</span><br><span class="line">        String code = codeProcessor.sendCode(smsParam);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 校验验证码</span></span><br><span class="line">        System.out.println(code);</span><br><span class="line"></span><br><span class="line">        SmsCodeParameter validateImageParam = <span class="keyword">new</span> SmsCodeParameter(smsUniqueKey);</span><br><span class="line">        validateImageParam.setCode(code);</span><br><span class="line">        CodeStatus result = codeProcessor.validateCode(validateImageParam);</span><br><span class="line">        System.out.println(result.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">imageCode</span><span class="params">(Cache cache)</span> <span class="keyword">throws</span> FileNotFoundException </span>&#123;</span><br><span class="line">        <span class="comment">// 发送图片验证码</span></span><br><span class="line">        String imageUniqueKey = <span class="string">"imageKey"</span>;</span><br><span class="line">        ImageCodeParameter imageParam = <span class="keyword">new</span> ImageCodeParameter(imageUniqueKey);</span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">"test01.jpeg"</span>);</span><br><span class="line">        FileOutputStream fileOutputStream = <span class="keyword">new</span> FileOutputStream(file);</span><br><span class="line">        imageParam.setOutputStream(fileOutputStream);</span><br><span class="line">        CodeProcessor codeProcessor = <span class="keyword">new</span> ImageCodeProcessor(cache);</span><br><span class="line">        String code = codeProcessor.sendCode(imageParam);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 校验验证码</span></span><br><span class="line">        System.out.println(code);</span><br><span class="line"></span><br><span class="line">        ImageCodeParameter validateImageParam = <span class="keyword">new</span> ImageCodeParameter(imageUniqueKey);</span><br><span class="line">        validateImageParam.setCode(code);</span><br><span class="line">        CodeStatus result = codeProcessor.validateCode(validateImageParam);</span><br><span class="line">        System.out.println(result.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line">生成图片验证码，code：e5x24n</span><br><span class="line">校验结果：EQUAL</span><br><span class="line">生成短信验证码，发送方：<span class="number">15113011111</span>发送验证码：<span class="number">534196</span>给接收方：<span class="number">15113022222</span></span><br><span class="line">校验结果：EQUAL</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;设计模式-模板模式&quot;&gt;&lt;a href=&quot;#设计模式-模板模式&quot; class=&quot;headerlink&quot; title=&quot;设计模式-模板模式&quot;&gt;&lt;/a&gt;设计模式-模板模式&lt;/h1&gt;&lt;h2 id=&quot;一、详解&quot;&gt;&lt;a href=&quot;#一、详解&quot; class=&quot;headerli
      
    
    </summary>
    
    
      <category term="设计模式" scheme="https://www.deschen.cn/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="模板模式" scheme="https://www.deschen.cn/tags/%E6%A8%A1%E6%9D%BF%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-策略模式</title>
    <link href="https://www.deschen.cn/2022/02/07/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/"/>
    <id>https://www.deschen.cn/2022/02/07/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/</id>
    <published>2022-02-07T12:23:20.000Z</published>
    <updated>2023-05-11T06:48:34.409Z</updated>
    
    <content type="html"><![CDATA[<h1 id="设计模式-策略模式"><a href="#设计模式-策略模式" class="headerlink" title="设计模式-策略模式"></a>设计模式-策略模式</h1><h2 id="一、详解"><a href="#一、详解" class="headerlink" title="一、详解"></a>一、详解</h2><ul><li>概念: 定义一个<strong>策略接口</strong> 和 <strong>一组具体的策略类</strong>，选择策略实现不同算法或行为</li><li>主要用途<ul><li>多个相同功能，但操作不同的类，根据需要选择</li><li>大量条件并且每个条件行为不同</li></ul></li><li>代码：策略接口、一组具体的策略类</li><li>与适配者模式的区别<ul><li>相同点：<strong>结构相似</strong>，都是对一个功能接口，多个实现类</li><li>不同点：<ul><li>适配器模式：适配器只是针对第三方接口的操作进行适配，体现在实现类上</li><li>策略模式：一个策略接口+一组具体策略实现类，体现在功能上</li></ul></li></ul></li></ul><h2 id="二、代码"><a href="#二、代码" class="headerlink" title="二、代码"></a>二、代码</h2><ul><li><p>文件存储服务为例：选择不同文件存储策略，上传文件</p></li><li><p>存储策略接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">StorageStrategy</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 上传文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filePath 文件路径</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileName 文件名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">uploadFile</span><span class="params">(String filePath, String fileName)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>具体存储策略：阿里云OSS和Minio</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OssStorageStrategy</span> <span class="keyword">implements</span> <span class="title">StorageStrategy</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">uploadFile</span><span class="params">(String filePath, String fileName)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"阿里云OSS上传文件成功,文件名: "</span> + fileName);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MinioStorageStrategy</span> <span class="keyword">implements</span> <span class="title">StorageStrategy</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">uploadFile</span><span class="params">(String filePath, String fileName)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Minio上传文件成功,文件名: "</span> + fileName);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>文件服务：选择策略</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">FileService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 上传文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filePath 文件路径</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileName 文件名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">uploadFile</span><span class="params">(String filePath, String fileName)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileServiceImpl</span> <span class="keyword">implements</span> <span class="title">FileService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> StorageStrategy storageStrategy;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FileServiceImpl</span><span class="params">(StorageStrategy storageStrategy)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.storageStrategy = storageStrategy;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">uploadFile</span><span class="params">(String filePath, String fileName)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"数据保存到数据库，文件名："</span> + fileName);</span><br><span class="line">        <span class="comment">// 使用设置好的策略</span></span><br><span class="line">        storageStrategy.uploadFile(filePath, fileName);</span><br><span class="line">        System.out.println(<span class="string">"发送消息通知相关人员"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>用例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 两种文件策略</span></span><br><span class="line">        StorageStrategy ossStorageStrategy = <span class="keyword">new</span> OssStorageStrategy();</span><br><span class="line">        StorageStrategy minioStorageStrategy = <span class="keyword">new</span> MinioStorageStrategy();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 文件服务，选择具体策略，实现功能</span></span><br><span class="line">        FileServiceImpl fileService = <span class="keyword">new</span> FileServiceImpl(ossStorageStrategy);</span><br><span class="line">        fileService.uploadFile(<span class="string">"/resources"</span>, <span class="string">"test.txt"</span>);</span><br><span class="line"></span><br><span class="line">        fileService = <span class="keyword">new</span> FileServiceImpl(minioStorageStrategy);</span><br><span class="line">        fileService.uploadFile(<span class="string">"/resources"</span>, <span class="string">"test.txt"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;设计模式-策略模式&quot;&gt;&lt;a href=&quot;#设计模式-策略模式&quot; class=&quot;headerlink&quot; title=&quot;设计模式-策略模式&quot;&gt;&lt;/a&gt;设计模式-策略模式&lt;/h1&gt;&lt;h2 id=&quot;一、详解&quot;&gt;&lt;a href=&quot;#一、详解&quot; class=&quot;headerli
      
    
    </summary>
    
    
      <category term="设计模式" scheme="https://www.deschen.cn/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="策略模式" scheme="https://www.deschen.cn/tags/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-代理模式</title>
    <link href="https://www.deschen.cn/2022/02/06/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/"/>
    <id>https://www.deschen.cn/2022/02/06/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/</id>
    <published>2022-02-06T14:40:20.000Z</published>
    <updated>2023-05-10T15:28:00.155Z</updated>
    
    <content type="html"><![CDATA[<h1 id="设计模式-代理模式"><a href="#设计模式-代理模式" class="headerlink" title="设计模式-代理模式"></a>设计模式-代理模式</h1><h2 id="一、详解"><a href="#一、详解" class="headerlink" title="一、详解"></a>一、详解</h2><ul><li>概念: 定义一个对象的<strong>代理类</strong>，通过<strong>代理类</strong>控制<strong>对象的访问</strong></li><li>主要用途<ul><li>远程代理：代理不同空间的对象，隐藏对象具体细节</li><li>虚拟代理：延迟加载对象，对象创建成本高，通过代理模式延迟创建</li></ul></li><li>代码：代理类、被代理的对象</li><li>与装饰者模式的区别<ul><li>相同点：<strong>结构</strong>上跟装饰者模式<strong>相似</strong>，都是通过<strong>包装对象</strong>来增强功能，不需要修改原有的对象结构</li><li>不同点：<ul><li>代理模式：控制对象的访问，即在访问对象前和后，执行额外操作</li><li>装饰者模式：除了增加额外操作外，还能<strong>修改原有的行为</strong></li></ul></li></ul></li></ul><h2 id="二、代码"><a href="#二、代码" class="headerlink" title="二、代码"></a>二、代码</h2><ul><li><p>以装饰者模式的用户服务为例：记录日志、保存加密的用户信息、展示解密的用户信息</p></li><li><p>原有的类/接口，被代理的对象<code>UserService</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用户类</span></span><br><span class="line">  <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">      <span class="keyword">private</span> String account;</span><br><span class="line">      <span class="keyword">private</span> String password;</span><br><span class="line">      <span class="keyword">private</span> String mobile;</span><br><span class="line">  </span><br><span class="line">      <span class="function"><span class="keyword">private</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// getter 和 toString 方法</span></span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Builder</span> </span>&#123;</span><br><span class="line">          <span class="keyword">private</span> User user;</span><br><span class="line">  </span><br><span class="line">          <span class="function"><span class="keyword">public</span> <span class="title">Builder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">              user = <span class="keyword">new</span> User();</span><br><span class="line">          &#125;</span><br><span class="line">  </span><br><span class="line">          <span class="function"><span class="keyword">public</span> Builder <span class="title">setAccount</span><span class="params">(String account)</span> </span>&#123;</span><br><span class="line">              user.account = account;</span><br><span class="line">              <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">          &#125;</span><br><span class="line">  </span><br><span class="line">          <span class="function"><span class="keyword">public</span> Builder <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">              user.password = password;</span><br><span class="line">              <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">          &#125;</span><br><span class="line">  </span><br><span class="line">          <span class="function"><span class="keyword">public</span> Builder <span class="title">setMobile</span><span class="params">(String mobile)</span> </span>&#123;</span><br><span class="line">              user.mobile = mobile;</span><br><span class="line">              <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">          &#125;</span><br><span class="line">  </span><br><span class="line">          <span class="function"><span class="keyword">public</span> User <span class="title">builder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">              <span class="keyword">return</span> user;</span><br><span class="line">          &#125;</span><br><span class="line">  </span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 用户服务接口</span></span><br><span class="line">  <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// 创建用户</span></span><br><span class="line">      <span class="function"><span class="keyword">void</span> <span class="title">createUser</span><span class="params">(String account, String password, String mobile)</span></span>;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// 展示用户信息</span></span><br><span class="line">      <span class="function">User <span class="title">showUserInfo</span><span class="params">(String account)</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 用户服务实现</span></span><br><span class="line">  <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">  </span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Map&lt;String, User&gt; storage = <span class="keyword">new</span> ConcurrentHashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createUser</span><span class="params">(String account, String password, String mobile)</span> </span>&#123;</span><br><span class="line">          User.Builder builder = <span class="keyword">new</span> User.Builder();</span><br><span class="line">          User user = builder.setAccount(account)</span><br><span class="line">                  .setPassword(password)</span><br><span class="line">                  .setMobile(mobile).builder();</span><br><span class="line">          storage.put(account, user);</span><br><span class="line">          System.out.println(<span class="string">"用户创建成功 user: "</span> + user.toString());</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> User <span class="title">showUserInfo</span><span class="params">(String account)</span> </span>&#123;</span><br><span class="line">          User user = storage.get(account);</span><br><span class="line">          <span class="keyword">return</span> user;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 原先用户服务用例</span></span><br><span class="line">  <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">  </span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">          UserService userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">          userService.createUser(<span class="string">"admin"</span>, <span class="string">"admin123"</span>, <span class="string">"15113088283"</span>);</span><br><span class="line">          User admin = userService.showUserInfo(<span class="string">"admin"</span>);</span><br><span class="line">          System.out.println(<span class="string">"用户信息 admin: "</span> + admin.toString());</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line">用户创建成功 user: User&#123;account=<span class="string">'admin'</span>, password=<span class="string">'admin123'</span>, mobile=<span class="string">'15113088283'</span>&#125;</span><br><span class="line">用户信息 admin: User&#123;account=<span class="string">'admin'</span>, password=<span class="string">'admin123'</span>, mobile=<span class="string">'15113088283'</span>&#125;</span><br></pre></td></tr></table></figure></li><li><p>代理类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 操作用户外，新增日志功能、保存加密用户信息和展示解密用户功能</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceProxy</span> <span class="keyword">implements</span> <span class="title">InvocationHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UserServiceProxy</span><span class="params">(UserService userService)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userService = userService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">encrypt</span><span class="params">(String data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Base64Encryptor.encrypt(data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">decrypt</span><span class="params">(String data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Base64Encryptor.decrypt(data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"日志记录 调用方法名"</span> + method.getName());</span><br><span class="line">        Object result;</span><br><span class="line">        <span class="keyword">switch</span> (method.getName()) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"createUser"</span>: &#123;</span><br><span class="line">                args[<span class="number">1</span>] = encrypt((String) args[<span class="number">1</span>]);</span><br><span class="line">                args[<span class="number">2</span>] = encrypt((String) args[<span class="number">2</span>]);</span><br><span class="line">                result = method.invoke(userService, args);</span><br><span class="line">            &#125;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"showUserInfo"</span>: &#123;</span><br><span class="line">                result = method.invoke(userService, args);</span><br><span class="line">                User user = (User) result;</span><br><span class="line">                String password = decrypt(user.getPassword());</span><br><span class="line">                String mobile = decrypt(user.getMobile());</span><br><span class="line">                <span class="comment">// 拷贝到新的对象，并返回</span></span><br><span class="line">                user = <span class="keyword">new</span> User.Builder()</span><br><span class="line">                        .setAccount(user.getAccount())</span><br><span class="line">                        .setPassword(password)</span><br><span class="line">                        .setMobile(mobile).builder();</span><br><span class="line">                System.out.println(<span class="string">"解密后的用户信息 user: "</span> + result.toString());</span><br><span class="line">                result = user;</span><br><span class="line">            &#125;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                result = method.invoke(userService, args);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"日志记录 运行结束 方法名"</span> + method.getName());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>用例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        UserService userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加用户加解密功能</span></span><br><span class="line">        UserServiceProxy proxy = <span class="keyword">new</span> UserServiceProxy(userService);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建动态代理</span></span><br><span class="line">        userService = (UserService) Proxy.newProxyInstance(userService.getClass().getClassLoader(),</span><br><span class="line">                userService.getClass().getInterfaces(), proxy);</span><br><span class="line">        userService.createUser(<span class="string">"admin"</span>, <span class="string">"admin123"</span>, <span class="string">"15113088283"</span>);</span><br><span class="line">        User admin = userService.showUserInfo(<span class="string">"admin"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line">日志记录 调用方法名createUser</span><br><span class="line">用户创建成功 user: User&#123;account=<span class="string">'admin'</span>, password=<span class="string">'YWRtaW4xMjM='</span>, mobile=<span class="string">'MTUxMTMwODgyODM='</span>&#125;</span><br><span class="line">日志记录 运行结束 方法名createUser</span><br><span class="line">日志记录 调用方法名showUserInfo</span><br><span class="line">解密后的用户信息 user: User&#123;account=<span class="string">'admin'</span>, password=<span class="string">'YWRtaW4xMjM='</span>, mobile=<span class="string">'MTUxMTMwODgyODM='</span>&#125;</span><br><span class="line">日志记录 运行结束 方法名showUserInfo</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;设计模式-代理模式&quot;&gt;&lt;a href=&quot;#设计模式-代理模式&quot; class=&quot;headerlink&quot; title=&quot;设计模式-代理模式&quot;&gt;&lt;/a&gt;设计模式-代理模式&lt;/h1&gt;&lt;h2 id=&quot;一、详解&quot;&gt;&lt;a href=&quot;#一、详解&quot; class=&quot;headerli
      
    
    </summary>
    
    
      <category term="设计模式" scheme="https://www.deschen.cn/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="代理模式" scheme="https://www.deschen.cn/tags/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-享元模式</title>
    <link href="https://www.deschen.cn/2022/02/05/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/"/>
    <id>https://www.deschen.cn/2022/02/05/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/</id>
    <published>2022-02-05T14:45:21.000Z</published>
    <updated>2023-05-10T02:37:11.523Z</updated>
    
    <content type="html"><![CDATA[<h1 id="享元模式"><a href="#享元模式" class="headerlink" title="享元模式"></a>享元模式</h1><h2 id="一、详解"><a href="#一、详解" class="headerlink" title="一、详解"></a>一、详解</h2><ul><li>概念：定义一个<strong>工厂类</strong>获取<strong>共享对象</strong>，<strong>减少</strong>内存使用和对象开销</li><li>主要用途：用于共享相同数据的场景：数字字典的引用</li><li>代码：工厂类</li><li>PS：该模式是缓存的一种：存储的对象，而且存的位置是内存。这样就有问题：只对自身项目共享，那么项目水平扩展，需要额外开销保证每台服务器的存储的对象一致</li></ul><h2 id="二、代码"><a href="#二、代码" class="headerlink" title="二、代码"></a>二、代码</h2><ul><li><p>以数字字典为例</p></li><li><p>字典类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dictionary</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 唯一标识</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 所属组编码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String groupCode;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 所属组名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String groupName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 字典编码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String dictCode;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 字典值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String dictValue;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 描述</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Dictionary</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Dictionary</span><span class="params">(Long id, String groupCode, String groupName, String dictCode, String dictValue, String description)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.groupCode = groupCode;</span><br><span class="line">        <span class="keyword">this</span>.groupName = groupName;</span><br><span class="line">        <span class="keyword">this</span>.dictCode = dictCode;</span><br><span class="line">        <span class="keyword">this</span>.dictValue = dictValue;</span><br><span class="line">        <span class="keyword">this</span>.description = description;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getGroupCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> groupCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setGroupCode</span><span class="params">(String groupCode)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.groupCode = groupCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getGroupName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> groupName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setGroupName</span><span class="params">(String groupName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.groupName = groupName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDictCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dictCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDictCode</span><span class="params">(String dictCode)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.dictCode = dictCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDictValue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dictValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDictValue</span><span class="params">(String dictValue)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.dictValue = dictValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDescription</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> description;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDescription</span><span class="params">(String description)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.description = description;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Dictionary&#123;"</span> +</span><br><span class="line">                <span class="string">"id="</span> + id +</span><br><span class="line">                <span class="string">", groupCode='"</span> + groupCode + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", groupName='"</span> + groupName + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", dictCode='"</span> + dictCode + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", dictValue='"</span> + dictValue + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", description='"</span> + description + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>字典API</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">DictionaryService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据分组编码和字典编码获取字典</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> groupCode 组编码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dictCode 字典编码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Dictionary <span class="title">getDictionary</span><span class="params">(String groupCode, String dictCode)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DictionaryServiceImpl</span> <span class="keyword">implements</span> <span class="title">DictionaryService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String GROUP_CODE_TEMPLATE = <span class="string">"groupCode%s"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String GROUP_NAME_TEMPLATE = <span class="string">"groupName%s"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DICT_CODE_TEMPLATE = <span class="string">"dictCode%s"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DICT_VALUE_TEMPLATE = <span class="string">"dictValue%s"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> List&lt;Dictionary&gt; dictionaries = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        Long id = <span class="number">1L</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++) &#123;</span><br><span class="line">                Dictionary dictionary = <span class="keyword">new</span> Dictionary(id, String.format(GROUP_CODE_TEMPLATE, i), String.format(GROUP_NAME_TEMPLATE, i),</span><br><span class="line">                        String.format(DICT_CODE_TEMPLATE, j), String.format(DICT_VALUE_TEMPLATE, j), <span class="string">""</span>);</span><br><span class="line">                id++;</span><br><span class="line">                dictionaries.add(dictionary);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Dictionary <span class="title">getDictionary</span><span class="params">(String groupCode, String dictCode)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (Dictionary dictionary : dictionaries) &#123;</span><br><span class="line">            <span class="keyword">if</span> (dictionary.getGroupCode().equals(groupCode) &amp;&amp; dictionary.getDictCode().equals(dictCode)) &#123;</span><br><span class="line">                <span class="keyword">return</span> dictionary;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>字典共享工厂</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DictionaryFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始容量大小：最大元素量 / 负载因子(0.75)，即使填入不是2的幂等性，ConcurrentHashMap也会自动转化为2的幂等性的值</span></span><br><span class="line"><span class="comment">     * 为什么博客建议用2的幂等性：保证哈希表在扩容时能够快速地定位元素的位置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Map&lt;String, Dictionary&gt; cache = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> DictionaryService dictionaryService;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DictionaryFactory</span><span class="params">(DictionaryService dictionaryService)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.dictionaryService = dictionaryService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据组编码和字典编号获取字典</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> groupCode</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dictCode</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Dictionary <span class="title">getDictionary</span><span class="params">(String groupCode, String dictCode)</span> </span>&#123;</span><br><span class="line">        String cacheKey = cacheKey(groupCode, dictCode);</span><br><span class="line"></span><br><span class="line">        Dictionary dictionary = cache.get(cacheKey);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == dictionary) &#123;</span><br><span class="line">            dictionary = dictionaryService.getDictionary(groupCode, dictCode);</span><br><span class="line">            cache.put(cacheKey, dictionary);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dictionary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">cacheKey</span><span class="params">(String groupCode, String dictCode)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> groupCode + <span class="string">":"</span> + dictCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;享元模式&quot;&gt;&lt;a href=&quot;#享元模式&quot; class=&quot;headerlink&quot; title=&quot;享元模式&quot;&gt;&lt;/a&gt;享元模式&lt;/h1&gt;&lt;h2 id=&quot;一、详解&quot;&gt;&lt;a href=&quot;#一、详解&quot; class=&quot;headerlink&quot; title=&quot;一、详解&quot;&gt;&lt;/a
      
    
    </summary>
    
    
      <category term="设计模式" scheme="https://www.deschen.cn/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="享元模式" scheme="https://www.deschen.cn/tags/%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
</feed>
